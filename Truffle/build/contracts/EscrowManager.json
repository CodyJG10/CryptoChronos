{
  "contractName": "EscrowManager",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        }
      ],
      "name": "escrowCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "escrowContracts",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalContracts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "addNewEscrow",
      "outputs": [
        {
          "internalType": "address",
          "name": "escrowAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        }
      ],
      "name": "addNewEscrow",
      "outputs": [
        {
          "internalType": "address",
          "name": "escrowAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"escrowCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"addNewEscrow\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"escrowAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"addNewEscrow\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"escrowAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"escrowContracts\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalContracts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/EscrowManager.sol\":\"EscrowManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x1ba5cf152c15dc0c785310feeb61e1f74387fc7bdc2aba5d90733f791606d4bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38db14c62d6431df042a7ca07fd021ea52ccdbd03f0be2b5c4ab034a56126d38\",\"dweb:/ipfs/QmbCHTCLP6bz8omQXrP8VuxFGdK9Hh3jqfrSTr38WNpTk4\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x872ba21af7c1f0ae04a715beca31e8fcac764d6c8762940b0fe1bfb6ed8e86f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://497017741d74878b56a67ad51e98061bd9ec0e6e4fdbfef0e2ab51523f4c16de\",\"dweb:/ipfs/QmWfkpRHksy8jFywqYxdmMqdkQ1hxrGTPoNBXbZ48zTvyv\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x483b106386dd309f168672928252a19f30c30efb4d17d4b8e2b0f587ca784a11\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://189a39d066c6886ddbe86c79bb36d6cbe66e98bc6a94956e28f5503dae4ad406\",\"dweb:/ipfs/QmT3s3PwCdXqHLJk26kcnedrRGTC9T18z52i9Be7PV9ppc\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x6052c25b1021f2b0e733fb52ca11948cb2f08cb66076397507243a6e8a8d7776\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://32ac4547a76b28021a007853958284aa8a15a64f1aeec83cb797b7fd60a46b56\",\"dweb:/ipfs/QmTJWQF8j586oaYNpdZv55xnzyHVQc68XN4eBNeiLbKX8d\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9944d1038f27dcebff810d7ba16b3b8058b967173d76874fb72dd7cd84129656\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c455cda07c5f8978c57e545ddde382552d3a55b6e3682e0f809ed07ec7defbe\",\"dweb:/ipfs/QmXkoKbxyMcMzjYdkXi5t4t3ZjBQ81pj7AaanS9jhePxyt\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x7736c187e6f1358c1ea9350a2a21aa8528dec1c2f43b374a9067465a3a51f5d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4fd625dca17657403af518cc6c8ab5c54c58898cf6e912ca2e1b0f3194ad0405\",\"dweb:/ipfs/QmQVv7YeeKmaS11bg7YDTeeGDk6i7sV8LMMfohaLM4SiRu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x5fa25f305839292fab713256214f2868e0257d29826b14282bbd7f1e34f5af38\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3de4074848249e00e1336db857e3fa8f78b4fe11d4a887f71050c22023b2132\",\"dweb:/ipfs/QmbL6k2zFGndQPNPG7vCDivtjKam3quJSrEbRuVsNo4hBw\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x905cd0ecd91d1de79a4679d745b79cf852ca8ccda5d25d1c49c6bd17a5edc0cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dd1601fcd370546d8c06ea1902d7e7364fc490fbf0ebc3004230ef1f5db473c\",\"dweb:/ipfs/Qmb8zbC3TjWFtcuyP3KEEaegMkPcfeKAcPrwzvkAoMR3cZ\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x6aa521718bf139b44ce56f194f6aea1d590cacef995b5a84703fb1579fa49be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://100f8d367b5e94eb9cb991914f1de133cf272654c0708faa893bbc17a5b35b93\",\"dweb:/ipfs/QmZeBojmgXq821dL1TJKFb58B1FogM9jL3u7hXQ8hTEBKT\"]},\"project:/contracts/Escrow.sol\":{\"keccak256\":\"0x8861d368437f870f583ae0322e8e9eeae44e60574f02f4fb1be659ef762f4ced\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb7f520377498498d466442a1d086d3b7a32a33a7462174ac93e47ac3ebfb494\",\"dweb:/ipfs/QmU4U1fas5ALgeQGG7FoxegMeDmZTGn6cMfCzmcXimRjZy\"]},\"project:/contracts/EscrowManager.sol\":{\"keccak256\":\"0x748f12ac714917ee84bb44c59f210b642fa5891822bc444fe6e770123c6cea33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78cf36b3c6c017ccf29030ea3c8c27cb6d67743b5948fffbbafb6b81060d72bf\",\"dweb:/ipfs/QmQSpUGV1gLp3rx76Z8CywGZngFtc3zjWztaituqVKKbAV\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611b0c806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063051a824c146100515780635d00fd1b1461006f578063a09037a91461009f578063d0e2dfba146100bd575b600080fd5b6100596100ed565b604051610066919061037b565b60405180910390f35b610089600480360381019061008491906103c7565b6101ea565b604051610096919061037b565b60405180910390f35b6100a76102e8565b6040516100b4919061040d565b60405180910390f35b6100d760048036038101906100d29190610454565b6102ee565b6040516100e4919061037b565b60405180910390f35b6000803360006040516100ff9061032d565b61010a929190610481565b604051809103906000f080158015610126573d6000803e3d6000fd5b50905060008190506002819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160008154809291906101a4906104d9565b91905055507f5d2a499500d12b4af8cd4d3c58699ba1b36912132b5a4b030270b55d1367be0a33826040516101da929190610481565b60405180910390a1809250505090565b60008033836040516101fb9061032d565b610206929190610481565b604051809103906000f080158015610222573d6000803e3d6000fd5b50905060008190506002819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160008154809291906102a0906104d9565b91905055507f5d2a499500d12b4af8cd4d3c58699ba1b36912132b5a4b030270b55d1367be0a33826040516102d6929190610481565b60405180910390a18092505050919050565b60015481565b600281815481106102fe57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6115b48061052383390190565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103658261033a565b9050919050565b6103758161035a565b82525050565b6000602082019050610390600083018461036c565b92915050565b600080fd5b6103a48161035a565b81146103af57600080fd5b50565b6000813590506103c18161039b565b92915050565b6000602082840312156103dd576103dc610396565b5b60006103eb848285016103b2565b91505092915050565b6000819050919050565b610407816103f4565b82525050565b600060208201905061042260008301846103fe565b92915050565b610431816103f4565b811461043c57600080fd5b50565b60008135905061044e81610428565b92915050565b60006020828403121561046a57610469610396565b5b60006104788482850161043f565b91505092915050565b6000604082019050610496600083018561036c565b6104a3602083018461036c565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006104e4826103f4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610517576105166104aa565b5b60018201905091905056fe60806040526000600460006101000a81548160ff0219169083151502179055506000600460016101000a81548160ff021916908315150217905550604051620015b4380380620015b483398181016040528101906200005f9190620001b6565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614620001165780600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000600460026101000a81548160ff021916908360068111156200013f576200013e620001fd565b5b021790555050506200022c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200017e8262000151565b9050919050565b620001908162000171565b81146200019c57600080fd5b50565b600081519050620001b08162000185565b92915050565b60008060408385031215620001d057620001cf6200014c565b5b6000620001e0858286016200019f565b9250506020620001f3858286016200019f565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b611378806200023c6000396000f3fe6080604052600436106100c25760003560e01c80635bf8633a1161007f5780639b5b9b18116100595780639b5b9b1814610218578063a1ee418114610241578063a5c42ef114610258578063f6326fb314610283576100c2565b80635bf8633a146101b85780635e10177b146101e3578063748807ab146101ed576100c2565b806312065fe0146100c7578063150b7a02146100f25780632f9fa7f61461012f578063342901a7146101465780633d9b2ae61461016257806344834aca1461018d575b600080fd5b3480156100d357600080fd5b506100dc61028d565b6040516100e99190610ee6565b60405180910390f35b3480156100fe57600080fd5b5061011960048036038101906101149190610ffa565b610295565b60405161012691906110bd565b60405180910390f35b34801561013b57600080fd5b506101446102aa565b005b610160600480360381019061015b9190611110565b61044a565b005b34801561016e57600080fd5b50610177610795565b604051610184919061115e565b60405180910390f35b34801561019957600080fd5b506101a26107b9565b6040516101af919061115e565b60405180910390f35b3480156101c457600080fd5b506101cd6107df565b6040516101da9190611188565b60405180910390f35b6101eb610805565b005b3480156101f957600080fd5b50610202610a30565b60405161020f919061121a565b60405180910390f35b34801561022457600080fd5b5061023f600480360381019061023a9190611235565b610a43565b005b34801561024d57600080fd5b50610256610c2d565b005b34801561026457600080fd5b5061026d610d79565b60405161027a9190610ee6565b60405180910390f35b61028b610d7f565b005b600047905090565b600063150b7a0260e01b905095945050505050565b60018060068111156102bf576102be6111a3565b5b600460029054906101000a900460ff1660068111156102e1576102e06111a3565b5b146102eb57600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461034357600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e30336003546040518463ffffffff1660e01b81526004016103a493929190611275565b600060405180830381600087803b1580156103be57600080fd5b505af11580156103d2573d6000803e3d6000fd5b505050506002600460026101000a81548160ff021916908360068111156103fc576103fb6111a3565b5b02179055507f23ad33ab6a13a00aa7d06cd167b2abd03dec86af3cf3cc91759dcd3ae8411887600460029054906101000a900460ff1660405161043f919061121a565b60405180910390a150565b600380600681111561045f5761045e6111a3565b5b600460029054906101000a900460ff166006811115610481576104806111a3565b5b1461048b57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610532575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61053b57600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156105ae5781600460016101000a81548160ff0219169083151502179055506105c9565b81600460006101000a81548160ff0219169083151502179055505b60011515600460019054906101000a900460ff1615151480156105ff575060011515600460009054906101000a900460ff161515145b1561079157600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e3060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff166003546040518463ffffffff1660e01b81526004016106859392919061130b565b600060405180830381600087803b15801561069f57600080fd5b505af11580156106b3573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561071f573d6000803e3d6000fd5b5060048060026101000a81548160ff02191690836006811115610745576107446111a3565b5b02179055507f23ad33ab6a13a00aa7d06cd167b2abd03dec86af3cf3cc91759dcd3ae8411887600460029054906101000a900460ff16604051610788919061121a565b60405180910390a15b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600580600681111561081a576108196111a3565b5b600460029054906101000a900460ff16600681111561083c5761083b6111a3565b5b1461084657600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108a057600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e30600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166003546040518463ffffffff1660e01b81526004016109239392919061130b565b600060405180830381600087803b15801561093d57600080fd5b505af1158015610951573d6000803e3d6000fd5b5050505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156109bb573d6000803e3d6000fd5b506006600460026101000a81548160ff021916908360068111156109e2576109e16111a3565b5b02179055507f23ad33ab6a13a00aa7d06cd167b2abd03dec86af3cf3cc91759dcd3ae8411887600460029054906101000a900460ff16604051610a25919061121a565b60405180910390a150565b600460029054906101000a900460ff1681565b6000806006811115610a5857610a576111a3565b5b600460029054906101000a900460ff166006811115610a7a57610a796111a3565b5b14610a8457600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610adc57600080fd5b82600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600381905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e33306003546040518463ffffffff1660e01b8152600401610b8593929190611275565b600060405180830381600087803b158015610b9f57600080fd5b505af1158015610bb3573d6000803e3d6000fd5b505050506001600460026101000a81548160ff02191690836006811115610bdd57610bdc6111a3565b5b02179055507f23ad33ab6a13a00aa7d06cd167b2abd03dec86af3cf3cc91759dcd3ae8411887600460029054906101000a900460ff16604051610c20919061121a565b60405180910390a1505050565b6003806006811115610c4257610c416111a3565b5b600460029054906101000a900460ff166006811115610c6457610c636111a3565b5b14610c6e57600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610cc657600080fd5b60001515600460009054906101000a900460ff161515148015610cfc575060001515600460019054906101000a900460ff161515145b610d0557600080fd5b6005600460026101000a81548160ff02191690836006811115610d2b57610d2a6111a3565b5b02179055507f23ad33ab6a13a00aa7d06cd167b2abd03dec86af3cf3cc91759dcd3ae8411887600460029054906101000a900460ff16604051610d6e919061121a565b60405180910390a150565b60035481565b6001806006811115610d9457610d936111a3565b5b600460029054906101000a900460ff166006811115610db657610db56111a3565b5b14610dc057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610e595733600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6003600460026101000a81548160ff02191690836006811115610e7f57610e7e6111a3565b5b02179055507f23ad33ab6a13a00aa7d06cd167b2abd03dec86af3cf3cc91759dcd3ae8411887600460029054906101000a900460ff16604051610ec2919061121a565b60405180910390a150565b6000819050919050565b610ee081610ecd565b82525050565b6000602082019050610efb6000830184610ed7565b92915050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f3682610f0b565b9050919050565b610f4681610f2b565b8114610f5157600080fd5b50565b600081359050610f6381610f3d565b92915050565b610f7281610ecd565b8114610f7d57600080fd5b50565b600081359050610f8f81610f69565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610fba57610fb9610f95565b5b8235905067ffffffffffffffff811115610fd757610fd6610f9a565b5b602083019150836001820283011115610ff357610ff2610f9f565b5b9250929050565b60008060008060006080868803121561101657611015610f01565b5b600061102488828901610f54565b955050602061103588828901610f54565b945050604061104688828901610f80565b935050606086013567ffffffffffffffff81111561106757611066610f06565b5b61107388828901610fa4565b92509250509295509295909350565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6110b781611082565b82525050565b60006020820190506110d260008301846110ae565b92915050565b60008115159050919050565b6110ed816110d8565b81146110f857600080fd5b50565b60008135905061110a816110e4565b92915050565b60006020828403121561112657611125610f01565b5b6000611134848285016110fb565b91505092915050565b600061114882610f0b565b9050919050565b6111588161113d565b82525050565b6000602082019050611173600083018461114f565b92915050565b61118281610f2b565b82525050565b600060208201905061119d6000830184611179565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600781106111e3576111e26111a3565b5b50565b60008190506111f4826111d2565b919050565b6000611204826111e6565b9050919050565b611214816111f9565b82525050565b600060208201905061122f600083018461120b565b92915050565b6000806040838503121561124c5761124b610f01565b5b600061125a85828601610f54565b925050602061126b85828601610f80565b9150509250929050565b600060608201905061128a6000830186611179565b6112976020830185611179565b6112a46040830184610ed7565b949350505050565b6000819050919050565b60006112d16112cc6112c784610f0b565b6112ac565b610f0b565b9050919050565b60006112e3826112b6565b9050919050565b60006112f5826112d8565b9050919050565b611305816112ea565b82525050565b60006060820190506113206000830186611179565b61132d60208301856112fc565b61133a6040830184610ed7565b94935050505056fea26469706673582212201026afaafb3876860044275add80b050242a80f5c0a725e639d4257ba2d5723964736f6c634300080a0033a2646970667358221220066c4d7cab16ca446532bb668cfcf02a87fb22f6ce21509e44f05c82d5ea9ae964736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c8063051a824c146100515780635d00fd1b1461006f578063a09037a91461009f578063d0e2dfba146100bd575b600080fd5b6100596100ed565b604051610066919061037b565b60405180910390f35b610089600480360381019061008491906103c7565b6101ea565b604051610096919061037b565b60405180910390f35b6100a76102e8565b6040516100b4919061040d565b60405180910390f35b6100d760048036038101906100d29190610454565b6102ee565b6040516100e4919061037b565b60405180910390f35b6000803360006040516100ff9061032d565b61010a929190610481565b604051809103906000f080158015610126573d6000803e3d6000fd5b50905060008190506002819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160008154809291906101a4906104d9565b91905055507f5d2a499500d12b4af8cd4d3c58699ba1b36912132b5a4b030270b55d1367be0a33826040516101da929190610481565b60405180910390a1809250505090565b60008033836040516101fb9061032d565b610206929190610481565b604051809103906000f080158015610222573d6000803e3d6000fd5b50905060008190506002819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160008154809291906102a0906104d9565b91905055507f5d2a499500d12b4af8cd4d3c58699ba1b36912132b5a4b030270b55d1367be0a33826040516102d6929190610481565b60405180910390a18092505050919050565b60015481565b600281815481106102fe57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6115b48061052383390190565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103658261033a565b9050919050565b6103758161035a565b82525050565b6000602082019050610390600083018461036c565b92915050565b600080fd5b6103a48161035a565b81146103af57600080fd5b50565b6000813590506103c18161039b565b92915050565b6000602082840312156103dd576103dc610396565b5b60006103eb848285016103b2565b91505092915050565b6000819050919050565b610407816103f4565b82525050565b600060208201905061042260008301846103fe565b92915050565b610431816103f4565b811461043c57600080fd5b50565b60008135905061044e81610428565b92915050565b60006020828403121561046a57610469610396565b5b60006104788482850161043f565b91505092915050565b6000604082019050610496600083018561036c565b6104a3602083018461036c565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006104e4826103f4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610517576105166104aa565b5b60018201905091905056fe60806040526000600460006101000a81548160ff0219169083151502179055506000600460016101000a81548160ff021916908315150217905550604051620015b4380380620015b483398181016040528101906200005f9190620001b6565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614620001165780600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000600460026101000a81548160ff021916908360068111156200013f576200013e620001fd565b5b021790555050506200022c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200017e8262000151565b9050919050565b620001908162000171565b81146200019c57600080fd5b50565b600081519050620001b08162000185565b92915050565b60008060408385031215620001d057620001cf6200014c565b5b6000620001e0858286016200019f565b9250506020620001f3858286016200019f565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b611378806200023c6000396000f3fe6080604052600436106100c25760003560e01c80635bf8633a1161007f5780639b5b9b18116100595780639b5b9b1814610218578063a1ee418114610241578063a5c42ef114610258578063f6326fb314610283576100c2565b80635bf8633a146101b85780635e10177b146101e3578063748807ab146101ed576100c2565b806312065fe0146100c7578063150b7a02146100f25780632f9fa7f61461012f578063342901a7146101465780633d9b2ae61461016257806344834aca1461018d575b600080fd5b3480156100d357600080fd5b506100dc61028d565b6040516100e99190610ee6565b60405180910390f35b3480156100fe57600080fd5b5061011960048036038101906101149190610ffa565b610295565b60405161012691906110bd565b60405180910390f35b34801561013b57600080fd5b506101446102aa565b005b610160600480360381019061015b9190611110565b61044a565b005b34801561016e57600080fd5b50610177610795565b604051610184919061115e565b60405180910390f35b34801561019957600080fd5b506101a26107b9565b6040516101af919061115e565b60405180910390f35b3480156101c457600080fd5b506101cd6107df565b6040516101da9190611188565b60405180910390f35b6101eb610805565b005b3480156101f957600080fd5b50610202610a30565b60405161020f919061121a565b60405180910390f35b34801561022457600080fd5b5061023f600480360381019061023a9190611235565b610a43565b005b34801561024d57600080fd5b50610256610c2d565b005b34801561026457600080fd5b5061026d610d79565b60405161027a9190610ee6565b60405180910390f35b61028b610d7f565b005b600047905090565b600063150b7a0260e01b905095945050505050565b60018060068111156102bf576102be6111a3565b5b600460029054906101000a900460ff1660068111156102e1576102e06111a3565b5b146102eb57600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461034357600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e30336003546040518463ffffffff1660e01b81526004016103a493929190611275565b600060405180830381600087803b1580156103be57600080fd5b505af11580156103d2573d6000803e3d6000fd5b505050506002600460026101000a81548160ff021916908360068111156103fc576103fb6111a3565b5b02179055507f23ad33ab6a13a00aa7d06cd167b2abd03dec86af3cf3cc91759dcd3ae8411887600460029054906101000a900460ff1660405161043f919061121a565b60405180910390a150565b600380600681111561045f5761045e6111a3565b5b600460029054906101000a900460ff166006811115610481576104806111a3565b5b1461048b57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610532575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61053b57600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156105ae5781600460016101000a81548160ff0219169083151502179055506105c9565b81600460006101000a81548160ff0219169083151502179055505b60011515600460019054906101000a900460ff1615151480156105ff575060011515600460009054906101000a900460ff161515145b1561079157600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e3060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff166003546040518463ffffffff1660e01b81526004016106859392919061130b565b600060405180830381600087803b15801561069f57600080fd5b505af11580156106b3573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561071f573d6000803e3d6000fd5b5060048060026101000a81548160ff02191690836006811115610745576107446111a3565b5b02179055507f23ad33ab6a13a00aa7d06cd167b2abd03dec86af3cf3cc91759dcd3ae8411887600460029054906101000a900460ff16604051610788919061121a565b60405180910390a15b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600580600681111561081a576108196111a3565b5b600460029054906101000a900460ff16600681111561083c5761083b6111a3565b5b1461084657600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108a057600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e30600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166003546040518463ffffffff1660e01b81526004016109239392919061130b565b600060405180830381600087803b15801561093d57600080fd5b505af1158015610951573d6000803e3d6000fd5b5050505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156109bb573d6000803e3d6000fd5b506006600460026101000a81548160ff021916908360068111156109e2576109e16111a3565b5b02179055507f23ad33ab6a13a00aa7d06cd167b2abd03dec86af3cf3cc91759dcd3ae8411887600460029054906101000a900460ff16604051610a25919061121a565b60405180910390a150565b600460029054906101000a900460ff1681565b6000806006811115610a5857610a576111a3565b5b600460029054906101000a900460ff166006811115610a7a57610a796111a3565b5b14610a8457600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610adc57600080fd5b82600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600381905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e33306003546040518463ffffffff1660e01b8152600401610b8593929190611275565b600060405180830381600087803b158015610b9f57600080fd5b505af1158015610bb3573d6000803e3d6000fd5b505050506001600460026101000a81548160ff02191690836006811115610bdd57610bdc6111a3565b5b02179055507f23ad33ab6a13a00aa7d06cd167b2abd03dec86af3cf3cc91759dcd3ae8411887600460029054906101000a900460ff16604051610c20919061121a565b60405180910390a1505050565b6003806006811115610c4257610c416111a3565b5b600460029054906101000a900460ff166006811115610c6457610c636111a3565b5b14610c6e57600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610cc657600080fd5b60001515600460009054906101000a900460ff161515148015610cfc575060001515600460019054906101000a900460ff161515145b610d0557600080fd5b6005600460026101000a81548160ff02191690836006811115610d2b57610d2a6111a3565b5b02179055507f23ad33ab6a13a00aa7d06cd167b2abd03dec86af3cf3cc91759dcd3ae8411887600460029054906101000a900460ff16604051610d6e919061121a565b60405180910390a150565b60035481565b6001806006811115610d9457610d936111a3565b5b600460029054906101000a900460ff166006811115610db657610db56111a3565b5b14610dc057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610e595733600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6003600460026101000a81548160ff02191690836006811115610e7f57610e7e6111a3565b5b02179055507f23ad33ab6a13a00aa7d06cd167b2abd03dec86af3cf3cc91759dcd3ae8411887600460029054906101000a900460ff16604051610ec2919061121a565b60405180910390a150565b6000819050919050565b610ee081610ecd565b82525050565b6000602082019050610efb6000830184610ed7565b92915050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f3682610f0b565b9050919050565b610f4681610f2b565b8114610f5157600080fd5b50565b600081359050610f6381610f3d565b92915050565b610f7281610ecd565b8114610f7d57600080fd5b50565b600081359050610f8f81610f69565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610fba57610fb9610f95565b5b8235905067ffffffffffffffff811115610fd757610fd6610f9a565b5b602083019150836001820283011115610ff357610ff2610f9f565b5b9250929050565b60008060008060006080868803121561101657611015610f01565b5b600061102488828901610f54565b955050602061103588828901610f54565b945050604061104688828901610f80565b935050606086013567ffffffffffffffff81111561106757611066610f06565b5b61107388828901610fa4565b92509250509295509295909350565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6110b781611082565b82525050565b60006020820190506110d260008301846110ae565b92915050565b60008115159050919050565b6110ed816110d8565b81146110f857600080fd5b50565b60008135905061110a816110e4565b92915050565b60006020828403121561112657611125610f01565b5b6000611134848285016110fb565b91505092915050565b600061114882610f0b565b9050919050565b6111588161113d565b82525050565b6000602082019050611173600083018461114f565b92915050565b61118281610f2b565b82525050565b600060208201905061119d6000830184611179565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600781106111e3576111e26111a3565b5b50565b60008190506111f4826111d2565b919050565b6000611204826111e6565b9050919050565b611214816111f9565b82525050565b600060208201905061122f600083018461120b565b92915050565b6000806040838503121561124c5761124b610f01565b5b600061125a85828601610f54565b925050602061126b85828601610f80565b9150509250929050565b600060608201905061128a6000830186611179565b6112976020830185611179565b6112a46040830184610ed7565b949350505050565b6000819050919050565b60006112d16112cc6112c784610f0b565b6112ac565b610f0b565b9050919050565b60006112e3826112b6565b9050919050565b60006112f5826112d8565b9050919050565b611305816112ea565b82525050565b60006060820190506113206000830186611179565b61132d60208301856112fc565b61133a6040830184610ed7565b94935050505056fea26469706673582212201026afaafb3876860044275add80b050242a80f5c0a725e639d4257ba2d5723964736f6c634300080a0033a2646970667358221220066c4d7cab16ca446532bb668cfcf02a87fb22f6ce21509e44f05c82d5ea9ae964736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3331:23",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "52:81:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "62:65:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "77:5:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "84:42:23",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "73:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "73:54:23"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "62:7:23"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34:5:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "44:7:23",
                "type": ""
              }
            ],
            "src": "7:126:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "184:51:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "194:35:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "223:5:23"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "205:17:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "205:24:23"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "194:7:23"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "166:5:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "176:7:23",
                "type": ""
              }
            ],
            "src": "139:96:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "306:53:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "323:3:23"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "346:5:23"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "328:17:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "328:24:23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "316:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "316:37:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "316:37:23"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "294:5:23",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "301:3:23",
                "type": ""
              }
            ],
            "src": "241:118:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "463:124:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "473:26:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "485:9:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "496:2:23",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "481:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "481:18:23"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "473:4:23"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "553:6:23"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "566:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "577:1:23",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "562:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "562:17:23"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "509:43:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "509:71:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "509:71:23"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "435:9:23",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "447:6:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "458:4:23",
                "type": ""
              }
            ],
            "src": "365:222:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "633:35:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "643:19:23",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "659:2:23",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "653:5:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "653:9:23"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "643:6:23"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "626:6:23",
                "type": ""
              }
            ],
            "src": "593:75:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "763:28:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "780:1:23",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "783:1:23",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "773:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "773:12:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "773:12:23"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "674:117:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "886:28:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "903:1:23",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "906:1:23",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "896:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "896:12:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "896:12:23"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "797:117:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "963:79:23",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1020:16:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1029:1:23",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1032:1:23",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1022:6:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1022:12:23"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1022:12:23"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "986:5:23"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1011:5:23"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "993:17:23"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "993:24:23"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "983:2:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "983:35:23"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "976:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "976:43:23"
                  },
                  "nodeType": "YulIf",
                  "src": "973:63:23"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "956:5:23",
                "type": ""
              }
            ],
            "src": "920:122:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1100:87:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1110:29:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1132:6:23"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1119:12:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1119:20:23"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1110:5:23"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1175:5:23"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1148:26:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1148:33:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1148:33:23"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1078:6:23",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1086:3:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1094:5:23",
                "type": ""
              }
            ],
            "src": "1048:139:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1259:263:23",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1305:83:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1307:77:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1307:79:23"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1307:79:23"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1280:7:23"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1289:9:23"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1276:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1276:23:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1301:2:23",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1272:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1272:32:23"
                  },
                  "nodeType": "YulIf",
                  "src": "1269:119:23"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1398:117:23",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1413:15:23",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1427:1:23",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1417:6:23",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1442:63:23",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1477:9:23"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1488:6:23"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1473:3:23"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1473:22:23"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1497:7:23"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1452:20:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1452:53:23"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1442:6:23"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1229:9:23",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1240:7:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1252:6:23",
                "type": ""
              }
            ],
            "src": "1193:329:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1573:32:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1583:16:23",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1594:5:23"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1583:7:23"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1555:5:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1565:7:23",
                "type": ""
              }
            ],
            "src": "1528:77:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1676:53:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1693:3:23"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1716:5:23"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1698:17:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1698:24:23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1686:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1686:37:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1686:37:23"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1664:5:23",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1671:3:23",
                "type": ""
              }
            ],
            "src": "1611:118:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1833:124:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1843:26:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1855:9:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1866:2:23",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1851:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1851:18:23"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1843:4:23"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1923:6:23"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1936:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1947:1:23",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1932:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1932:17:23"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1879:43:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1879:71:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1879:71:23"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1805:9:23",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1817:6:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1828:4:23",
                "type": ""
              }
            ],
            "src": "1735:222:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2006:79:23",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2063:16:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2072:1:23",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2075:1:23",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2065:6:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2065:12:23"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2065:12:23"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2029:5:23"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2054:5:23"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "2036:17:23"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2036:24:23"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2026:2:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2026:35:23"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2019:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2019:43:23"
                  },
                  "nodeType": "YulIf",
                  "src": "2016:63:23"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1999:5:23",
                "type": ""
              }
            ],
            "src": "1963:122:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2143:87:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2153:29:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2175:6:23"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2162:12:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2162:20:23"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2153:5:23"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2218:5:23"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2191:26:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2191:33:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2191:33:23"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2121:6:23",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2129:3:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2137:5:23",
                "type": ""
              }
            ],
            "src": "2091:139:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2302:263:23",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2348:83:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2350:77:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2350:79:23"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2350:79:23"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2323:7:23"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2332:9:23"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2319:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2319:23:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2344:2:23",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2315:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2315:32:23"
                  },
                  "nodeType": "YulIf",
                  "src": "2312:119:23"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2441:117:23",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2456:15:23",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2470:1:23",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2460:6:23",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2485:63:23",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2520:9:23"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2531:6:23"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2516:3:23"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2516:22:23"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2540:7:23"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2495:20:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2495:53:23"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2485:6:23"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2272:9:23",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2283:7:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2295:6:23",
                "type": ""
              }
            ],
            "src": "2236:329:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2697:206:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2707:26:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2719:9:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2730:2:23",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2715:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2715:18:23"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2707:4:23"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2787:6:23"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2800:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2811:1:23",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2796:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2796:17:23"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2743:43:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2743:71:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2743:71:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2868:6:23"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2881:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2892:2:23",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2877:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2877:18:23"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2824:43:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2824:72:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2824:72:23"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2661:9:23",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2673:6:23",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2681:6:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2692:4:23",
                "type": ""
              }
            ],
            "src": "2571:332:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2937:152:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2954:1:23",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2957:77:23",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2947:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2947:88:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2947:88:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3051:1:23",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3054:4:23",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3044:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3044:15:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3044:15:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3075:1:23",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3078:4:23",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3068:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3068:15:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3068:15:23"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "2909:180:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3138:190:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3148:33:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3175:5:23"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "3157:17:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3157:24:23"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "3148:5:23"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3271:22:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "3273:16:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3273:18:23"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3273:18:23"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3196:5:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3203:66:23",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "3193:2:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3193:77:23"
                  },
                  "nodeType": "YulIf",
                  "src": "3190:103:23"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3302:20:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3313:5:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3320:1:23",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3309:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3309:13:23"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "3302:3:23"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3124:5:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "3134:3:23",
                "type": ""
              }
            ],
            "src": "3095:233:23"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n}\n",
      "id": 23,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "218:933:18:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "218:933:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;425:353;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;787:361;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;351:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;384:32;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;425:353;464:21;497:19;541:10;562:1;519:46;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;497:68;;576:19;606:9;576:40;;627:15;648:11;627:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;671:14;;:16;;;;;;;;;:::i;:::-;;;;;;703:38;717:10;729:11;703:38;;;;;;;:::i;:::-;;;;;;;;759:11;752:18;;;;425:353;:::o;787:361::-;839:21;872:19;916:10;929:5;894:41;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;872:63;;946:19;976:9;946:40;;997:15;1018:11;997:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1041:14;;:16;;;;;;;;;:::i;:::-;;;;;;1073:38;1087:10;1099:11;1073:38;;;;;;;:::i;:::-;;;;;;;;1129:11;1122:18;;;;787:361;;;:::o;351:26::-;;;;:::o;384:32::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;7:126:23:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:122;993:24;1011:5;993:24;:::i;:::-;986:5;983:35;973:63;;1032:1;1029;1022:12;973:63;920:122;:::o;1048:139::-;1094:5;1132:6;1119:20;1110:29;;1148:33;1175:5;1148:33;:::i;:::-;1048:139;;;;:::o;1193:329::-;1252:6;1301:2;1289:9;1280:7;1276:23;1272:32;1269:119;;;1307:79;;:::i;:::-;1269:119;1427:1;1452:53;1497:7;1488:6;1477:9;1473:22;1452:53;:::i;:::-;1442:63;;1398:117;1193:329;;;;:::o;1528:77::-;1565:7;1594:5;1583:16;;1528:77;;;:::o;1611:118::-;1698:24;1716:5;1698:24;:::i;:::-;1693:3;1686:37;1611:118;;:::o;1735:222::-;1828:4;1866:2;1855:9;1851:18;1843:26;;1879:71;1947:1;1936:9;1932:17;1923:6;1879:71;:::i;:::-;1735:222;;;;:::o;1963:122::-;2036:24;2054:5;2036:24;:::i;:::-;2029:5;2026:35;2016:63;;2075:1;2072;2065:12;2016:63;1963:122;:::o;2091:139::-;2137:5;2175:6;2162:20;2153:29;;2191:33;2218:5;2191:33;:::i;:::-;2091:139;;;;:::o;2236:329::-;2295:6;2344:2;2332:9;2323:7;2319:23;2315:32;2312:119;;;2350:79;;:::i;:::-;2312:119;2470:1;2495:53;2540:7;2531:6;2520:9;2516:22;2495:53;:::i;:::-;2485:63;;2441:117;2236:329;;;;:::o;2571:332::-;2692:4;2730:2;2719:9;2715:18;2707:26;;2743:71;2811:1;2800:9;2796:17;2787:6;2743:71;:::i;:::-;2824:72;2892:2;2881:9;2877:18;2868:6;2824:72;:::i;:::-;2571:332;;;;;:::o;2909:180::-;2957:77;2954:1;2947:88;3054:4;3051:1;3044:15;3078:4;3075:1;3068:15;3095:233;3134:3;3157:24;3175:5;3157:24;:::i;:::-;3148:33;;3203:66;3196:5;3193:77;3190:103;;;3273:18;;:::i;:::-;3190:103;3320:1;3313:5;3309:13;3302:20;;3095:233;;;:::o",
  "source": "//SPDX-License-Identifier: MIT\r\n \r\npragma solidity ^0.8.10;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\r\n\r\nimport \"./Escrow.sol\";\r\n\r\ncontract EscrowManager {\r\n\r\n    address internal _owner; \r\n\r\n    event escrowCreated(address owner, address contractAddress);\r\n\r\n    uint public totalContracts;\r\n    address[] public escrowContracts;\r\n\r\n    function addNewEscrow() public returns(address escrowAddress){\r\n        NftEscrow newEscrow = new NftEscrow(address(msg.sender), address(0));\r\n        address newContract = address(newEscrow);\r\n        escrowContracts.push(newContract);\r\n        totalContracts++;\r\n        emit escrowCreated(msg.sender, newContract);\r\n        return newContract;\r\n    }\r\n\r\n     function addNewEscrow(address buyer) public returns(address escrowAddress){\r\n        NftEscrow newEscrow = new NftEscrow(address(msg.sender), buyer);\r\n        address newContract = address(newEscrow);\r\n        escrowContracts.push(newContract);\r\n        totalContracts++;\r\n        emit escrowCreated(msg.sender, newContract);\r\n        return newContract;\r\n    }\r\n}",
  "sourcePath": "D:\\MSDN Projects\\NFT Marketplace\\Truffle\\contracts\\EscrowManager.sol",
  "ast": {
    "absolutePath": "project:/contracts/EscrowManager.sol",
    "exportedSymbols": {
      "Address": [
        1890
      ],
      "Context": [
        1912
      ],
      "ERC165": [
        2139
      ],
      "ERC721": [
        935
      ],
      "EscrowManager": [
        3392
      ],
      "IERC165": [
        2151
      ],
      "IERC721": [
        1051
      ],
      "IERC721Metadata": [
        1593
      ],
      "IERC721Receiver": [
        1069
      ],
      "NftEscrow": [
        3280
      ],
      "Strings": [
        2115
      ]
    },
    "id": 3393,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3282,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:24:18"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 3283,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3393,
        "sourceUnit": 936,
        "src": "63:57:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "id": 3284,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3393,
        "sourceUnit": 1070,
        "src": "122:66:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Escrow.sol",
        "file": "./Escrow.sol",
        "id": 3285,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3393,
        "sourceUnit": 3281,
        "src": "192:22:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "EscrowManager",
        "contractDependencies": [
          3280
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3392,
        "linearizedBaseContracts": [
          3392
        ],
        "name": "EscrowManager",
        "nameLocation": "227:13:18",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3287,
            "mutability": "mutable",
            "name": "_owner",
            "nameLocation": "267:6:18",
            "nodeType": "VariableDeclaration",
            "scope": 3392,
            "src": "250:23:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3286,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "250:7:18",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 3293,
            "name": "escrowCreated",
            "nameLocation": "289:13:18",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3292,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3289,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "311:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 3293,
                  "src": "303:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3288,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "303:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3291,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nameLocation": "326:15:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 3293,
                  "src": "318:23:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3290,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "318:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "302:40:18"
            },
            "src": "283:60:18"
          },
          {
            "constant": false,
            "functionSelector": "a09037a9",
            "id": 3295,
            "mutability": "mutable",
            "name": "totalContracts",
            "nameLocation": "363:14:18",
            "nodeType": "VariableDeclaration",
            "scope": 3392,
            "src": "351:26:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3294,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "351:4:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d0e2dfba",
            "id": 3298,
            "mutability": "mutable",
            "name": "escrowContracts",
            "nameLocation": "401:15:18",
            "nodeType": "VariableDeclaration",
            "scope": 3392,
            "src": "384:32:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 3296,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "384:7:18",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 3297,
              "nodeType": "ArrayTypeName",
              "src": "384:9:18",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 3344,
              "nodeType": "Block",
              "src": "486:292:18",
              "statements": [
                {
                  "assignments": [
                    3305
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3305,
                      "mutability": "mutable",
                      "name": "newEscrow",
                      "nameLocation": "507:9:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 3344,
                      "src": "497:19:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NftEscrow_$3280",
                        "typeString": "contract NftEscrow"
                      },
                      "typeName": {
                        "id": 3304,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3303,
                          "name": "NftEscrow",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3280,
                          "src": "497:9:18"
                        },
                        "referencedDeclaration": 3280,
                        "src": "497:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NftEscrow_$3280",
                          "typeString": "contract NftEscrow"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3319,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 3311,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "541:3:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3312,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "541:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "533:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3309,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "533:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "533:19:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 3316,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "562:1:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 3315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "554:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3314,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "554:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "554:10:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "519:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_payable$_t_address_$_t_address_$returns$_t_contract$_NftEscrow_$3280_$",
                        "typeString": "function (address,address) payable returns (contract NftEscrow)"
                      },
                      "typeName": {
                        "id": 3307,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3306,
                          "name": "NftEscrow",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3280,
                          "src": "523:9:18"
                        },
                        "referencedDeclaration": 3280,
                        "src": "523:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NftEscrow_$3280",
                          "typeString": "contract NftEscrow"
                        }
                      }
                    },
                    "id": 3318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "519:46:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NftEscrow_$3280",
                      "typeString": "contract NftEscrow"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "497:68:18"
                },
                {
                  "assignments": [
                    3321
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3321,
                      "mutability": "mutable",
                      "name": "newContract",
                      "nameLocation": "584:11:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 3344,
                      "src": "576:19:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3320,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "576:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3326,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3324,
                        "name": "newEscrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3305,
                        "src": "606:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NftEscrow_$3280",
                          "typeString": "contract NftEscrow"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_NftEscrow_$3280",
                          "typeString": "contract NftEscrow"
                        }
                      ],
                      "id": 3323,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "598:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 3322,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "598:7:18",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 3325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "598:18:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "576:40:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3330,
                        "name": "newContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3321,
                        "src": "648:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3327,
                        "name": "escrowContracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3298,
                        "src": "627:15:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 3329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "627:20:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 3331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "627:33:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3332,
                  "nodeType": "ExpressionStatement",
                  "src": "627:33:18"
                },
                {
                  "expression": {
                    "id": 3334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "671:16:18",
                    "subExpression": {
                      "id": 3333,
                      "name": "totalContracts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3295,
                      "src": "671:14:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3335,
                  "nodeType": "ExpressionStatement",
                  "src": "671:16:18"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3337,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "717:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "717:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3339,
                        "name": "newContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3321,
                        "src": "729:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3336,
                      "name": "escrowCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3293,
                      "src": "703:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 3340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "703:38:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3341,
                  "nodeType": "EmitStatement",
                  "src": "698:43:18"
                },
                {
                  "expression": {
                    "id": 3342,
                    "name": "newContract",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3321,
                    "src": "759:11:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3302,
                  "id": 3343,
                  "nodeType": "Return",
                  "src": "752:18:18"
                }
              ]
            },
            "functionSelector": "051a824c",
            "id": 3345,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addNewEscrow",
            "nameLocation": "434:12:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3299,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "446:2:18"
            },
            "returnParameters": {
              "id": 3302,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3301,
                  "mutability": "mutable",
                  "name": "escrowAddress",
                  "nameLocation": "472:13:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 3345,
                  "src": "464:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3300,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "464:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "463:23:18"
            },
            "scope": 3392,
            "src": "425:353:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3390,
              "nodeType": "Block",
              "src": "861:287:18",
              "statements": [
                {
                  "assignments": [
                    3354
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3354,
                      "mutability": "mutable",
                      "name": "newEscrow",
                      "nameLocation": "882:9:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 3390,
                      "src": "872:19:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NftEscrow_$3280",
                        "typeString": "contract NftEscrow"
                      },
                      "typeName": {
                        "id": 3353,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3352,
                          "name": "NftEscrow",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3280,
                          "src": "872:9:18"
                        },
                        "referencedDeclaration": 3280,
                        "src": "872:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NftEscrow_$3280",
                          "typeString": "contract NftEscrow"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3365,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 3360,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "916:3:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3361,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "916:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "908:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3358,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "908:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "908:19:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3363,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3347,
                        "src": "929:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3357,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "894:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_payable$_t_address_$_t_address_$returns$_t_contract$_NftEscrow_$3280_$",
                        "typeString": "function (address,address) payable returns (contract NftEscrow)"
                      },
                      "typeName": {
                        "id": 3356,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3355,
                          "name": "NftEscrow",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3280,
                          "src": "898:9:18"
                        },
                        "referencedDeclaration": 3280,
                        "src": "898:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NftEscrow_$3280",
                          "typeString": "contract NftEscrow"
                        }
                      }
                    },
                    "id": 3364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "894:41:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NftEscrow_$3280",
                      "typeString": "contract NftEscrow"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "872:63:18"
                },
                {
                  "assignments": [
                    3367
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3367,
                      "mutability": "mutable",
                      "name": "newContract",
                      "nameLocation": "954:11:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 3390,
                      "src": "946:19:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3366,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "946:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3372,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3370,
                        "name": "newEscrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3354,
                        "src": "976:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NftEscrow_$3280",
                          "typeString": "contract NftEscrow"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_NftEscrow_$3280",
                          "typeString": "contract NftEscrow"
                        }
                      ],
                      "id": 3369,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "968:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 3368,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "968:7:18",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 3371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "968:18:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "946:40:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3376,
                        "name": "newContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3367,
                        "src": "1018:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3373,
                        "name": "escrowContracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3298,
                        "src": "997:15:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 3375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "997:20:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 3377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "997:33:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3378,
                  "nodeType": "ExpressionStatement",
                  "src": "997:33:18"
                },
                {
                  "expression": {
                    "id": 3380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1041:16:18",
                    "subExpression": {
                      "id": 3379,
                      "name": "totalContracts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3295,
                      "src": "1041:14:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3381,
                  "nodeType": "ExpressionStatement",
                  "src": "1041:16:18"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3383,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1087:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1087:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3385,
                        "name": "newContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3367,
                        "src": "1099:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3382,
                      "name": "escrowCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3293,
                      "src": "1073:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 3386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1073:38:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3387,
                  "nodeType": "EmitStatement",
                  "src": "1068:43:18"
                },
                {
                  "expression": {
                    "id": 3388,
                    "name": "newContract",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3367,
                    "src": "1129:11:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3351,
                  "id": 3389,
                  "nodeType": "Return",
                  "src": "1122:18:18"
                }
              ]
            },
            "functionSelector": "5d00fd1b",
            "id": 3391,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addNewEscrow",
            "nameLocation": "796:12:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3348,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3347,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "817:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 3391,
                  "src": "809:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3346,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "809:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "808:15:18"
            },
            "returnParameters": {
              "id": 3351,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3350,
                  "mutability": "mutable",
                  "name": "escrowAddress",
                  "nameLocation": "847:13:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 3391,
                  "src": "839:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3349,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "839:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "838:23:18"
            },
            "scope": 3392,
            "src": "787:361:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3393,
        "src": "218:933:18",
        "usedErrors": []
      }
    ],
    "src": "35:1116:18"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/EscrowManager.sol",
    "exportedSymbols": {
      "Address": [
        1890
      ],
      "Context": [
        1912
      ],
      "ERC165": [
        2139
      ],
      "ERC721": [
        935
      ],
      "EscrowManager": [
        3392
      ],
      "IERC165": [
        2151
      ],
      "IERC721": [
        1051
      ],
      "IERC721Metadata": [
        1593
      ],
      "IERC721Receiver": [
        1069
      ],
      "NftEscrow": [
        3280
      ],
      "Strings": [
        2115
      ]
    },
    "id": 3393,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3282,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:24:18"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 3283,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3393,
        "sourceUnit": 936,
        "src": "63:57:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "id": 3284,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3393,
        "sourceUnit": 1070,
        "src": "122:66:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Escrow.sol",
        "file": "./Escrow.sol",
        "id": 3285,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3393,
        "sourceUnit": 3281,
        "src": "192:22:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "EscrowManager",
        "contractDependencies": [
          3280
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3392,
        "linearizedBaseContracts": [
          3392
        ],
        "name": "EscrowManager",
        "nameLocation": "227:13:18",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3287,
            "mutability": "mutable",
            "name": "_owner",
            "nameLocation": "267:6:18",
            "nodeType": "VariableDeclaration",
            "scope": 3392,
            "src": "250:23:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3286,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "250:7:18",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 3293,
            "name": "escrowCreated",
            "nameLocation": "289:13:18",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3292,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3289,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "311:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 3293,
                  "src": "303:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3288,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "303:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3291,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nameLocation": "326:15:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 3293,
                  "src": "318:23:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3290,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "318:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "302:40:18"
            },
            "src": "283:60:18"
          },
          {
            "constant": false,
            "functionSelector": "a09037a9",
            "id": 3295,
            "mutability": "mutable",
            "name": "totalContracts",
            "nameLocation": "363:14:18",
            "nodeType": "VariableDeclaration",
            "scope": 3392,
            "src": "351:26:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3294,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "351:4:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d0e2dfba",
            "id": 3298,
            "mutability": "mutable",
            "name": "escrowContracts",
            "nameLocation": "401:15:18",
            "nodeType": "VariableDeclaration",
            "scope": 3392,
            "src": "384:32:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 3296,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "384:7:18",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 3297,
              "nodeType": "ArrayTypeName",
              "src": "384:9:18",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 3344,
              "nodeType": "Block",
              "src": "486:292:18",
              "statements": [
                {
                  "assignments": [
                    3305
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3305,
                      "mutability": "mutable",
                      "name": "newEscrow",
                      "nameLocation": "507:9:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 3344,
                      "src": "497:19:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NftEscrow_$3280",
                        "typeString": "contract NftEscrow"
                      },
                      "typeName": {
                        "id": 3304,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3303,
                          "name": "NftEscrow",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3280,
                          "src": "497:9:18"
                        },
                        "referencedDeclaration": 3280,
                        "src": "497:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NftEscrow_$3280",
                          "typeString": "contract NftEscrow"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3319,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 3311,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "541:3:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3312,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "541:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "533:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3309,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "533:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "533:19:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 3316,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "562:1:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 3315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "554:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3314,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "554:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "554:10:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "519:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_payable$_t_address_$_t_address_$returns$_t_contract$_NftEscrow_$3280_$",
                        "typeString": "function (address,address) payable returns (contract NftEscrow)"
                      },
                      "typeName": {
                        "id": 3307,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3306,
                          "name": "NftEscrow",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3280,
                          "src": "523:9:18"
                        },
                        "referencedDeclaration": 3280,
                        "src": "523:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NftEscrow_$3280",
                          "typeString": "contract NftEscrow"
                        }
                      }
                    },
                    "id": 3318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "519:46:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NftEscrow_$3280",
                      "typeString": "contract NftEscrow"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "497:68:18"
                },
                {
                  "assignments": [
                    3321
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3321,
                      "mutability": "mutable",
                      "name": "newContract",
                      "nameLocation": "584:11:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 3344,
                      "src": "576:19:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3320,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "576:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3326,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3324,
                        "name": "newEscrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3305,
                        "src": "606:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NftEscrow_$3280",
                          "typeString": "contract NftEscrow"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_NftEscrow_$3280",
                          "typeString": "contract NftEscrow"
                        }
                      ],
                      "id": 3323,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "598:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 3322,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "598:7:18",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 3325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "598:18:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "576:40:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3330,
                        "name": "newContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3321,
                        "src": "648:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3327,
                        "name": "escrowContracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3298,
                        "src": "627:15:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 3329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "627:20:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 3331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "627:33:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3332,
                  "nodeType": "ExpressionStatement",
                  "src": "627:33:18"
                },
                {
                  "expression": {
                    "id": 3334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "671:16:18",
                    "subExpression": {
                      "id": 3333,
                      "name": "totalContracts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3295,
                      "src": "671:14:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3335,
                  "nodeType": "ExpressionStatement",
                  "src": "671:16:18"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3337,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "717:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "717:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3339,
                        "name": "newContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3321,
                        "src": "729:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3336,
                      "name": "escrowCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3293,
                      "src": "703:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 3340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "703:38:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3341,
                  "nodeType": "EmitStatement",
                  "src": "698:43:18"
                },
                {
                  "expression": {
                    "id": 3342,
                    "name": "newContract",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3321,
                    "src": "759:11:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3302,
                  "id": 3343,
                  "nodeType": "Return",
                  "src": "752:18:18"
                }
              ]
            },
            "functionSelector": "051a824c",
            "id": 3345,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addNewEscrow",
            "nameLocation": "434:12:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3299,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "446:2:18"
            },
            "returnParameters": {
              "id": 3302,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3301,
                  "mutability": "mutable",
                  "name": "escrowAddress",
                  "nameLocation": "472:13:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 3345,
                  "src": "464:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3300,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "464:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "463:23:18"
            },
            "scope": 3392,
            "src": "425:353:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3390,
              "nodeType": "Block",
              "src": "861:287:18",
              "statements": [
                {
                  "assignments": [
                    3354
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3354,
                      "mutability": "mutable",
                      "name": "newEscrow",
                      "nameLocation": "882:9:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 3390,
                      "src": "872:19:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NftEscrow_$3280",
                        "typeString": "contract NftEscrow"
                      },
                      "typeName": {
                        "id": 3353,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3352,
                          "name": "NftEscrow",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3280,
                          "src": "872:9:18"
                        },
                        "referencedDeclaration": 3280,
                        "src": "872:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NftEscrow_$3280",
                          "typeString": "contract NftEscrow"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3365,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 3360,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "916:3:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3361,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "916:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "908:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3358,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "908:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "908:19:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3363,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3347,
                        "src": "929:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3357,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "894:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_payable$_t_address_$_t_address_$returns$_t_contract$_NftEscrow_$3280_$",
                        "typeString": "function (address,address) payable returns (contract NftEscrow)"
                      },
                      "typeName": {
                        "id": 3356,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3355,
                          "name": "NftEscrow",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3280,
                          "src": "898:9:18"
                        },
                        "referencedDeclaration": 3280,
                        "src": "898:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NftEscrow_$3280",
                          "typeString": "contract NftEscrow"
                        }
                      }
                    },
                    "id": 3364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "894:41:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NftEscrow_$3280",
                      "typeString": "contract NftEscrow"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "872:63:18"
                },
                {
                  "assignments": [
                    3367
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3367,
                      "mutability": "mutable",
                      "name": "newContract",
                      "nameLocation": "954:11:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 3390,
                      "src": "946:19:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3366,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "946:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3372,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3370,
                        "name": "newEscrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3354,
                        "src": "976:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NftEscrow_$3280",
                          "typeString": "contract NftEscrow"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_NftEscrow_$3280",
                          "typeString": "contract NftEscrow"
                        }
                      ],
                      "id": 3369,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "968:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 3368,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "968:7:18",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 3371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "968:18:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "946:40:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3376,
                        "name": "newContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3367,
                        "src": "1018:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3373,
                        "name": "escrowContracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3298,
                        "src": "997:15:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 3375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "997:20:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 3377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "997:33:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3378,
                  "nodeType": "ExpressionStatement",
                  "src": "997:33:18"
                },
                {
                  "expression": {
                    "id": 3380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1041:16:18",
                    "subExpression": {
                      "id": 3379,
                      "name": "totalContracts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3295,
                      "src": "1041:14:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3381,
                  "nodeType": "ExpressionStatement",
                  "src": "1041:16:18"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3383,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1087:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1087:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3385,
                        "name": "newContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3367,
                        "src": "1099:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3382,
                      "name": "escrowCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3293,
                      "src": "1073:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 3386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1073:38:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3387,
                  "nodeType": "EmitStatement",
                  "src": "1068:43:18"
                },
                {
                  "expression": {
                    "id": 3388,
                    "name": "newContract",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3367,
                    "src": "1129:11:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3351,
                  "id": 3389,
                  "nodeType": "Return",
                  "src": "1122:18:18"
                }
              ]
            },
            "functionSelector": "5d00fd1b",
            "id": 3391,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addNewEscrow",
            "nameLocation": "796:12:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3348,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3347,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "817:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 3391,
                  "src": "809:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3346,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "809:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "808:15:18"
            },
            "returnParameters": {
              "id": 3351,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3350,
                  "mutability": "mutable",
                  "name": "escrowAddress",
                  "nameLocation": "847:13:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 3391,
                  "src": "839:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3349,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "839:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "838:23:18"
            },
            "scope": 3392,
            "src": "787:361:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3393,
        "src": "218:933:18",
        "usedErrors": []
      }
    ],
    "src": "35:1116:18"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {},
      "links": {},
      "address": "0x6307832F3d5F9506ba2B10cC0F17586264aae168",
      "transactionHash": "0xd4b70350783999f2e7fbeda7636e8c7672f9e39b450698230b629bf22f5db4c4"
    },
    "5777": {
      "events": {},
      "links": {},
      "address": "0xd57637984E64790554824B027602BA802becAd8f",
      "transactionHash": "0xb372c6e11588ca27374e437239519ceeff17b936e8eb3d560796d1b78cd7b287"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-12-30T18:24:46.061Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}