{
  "contractName": "NftEscrow",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum NftEscrow.ProjectState",
          "name": "state",
          "type": "uint8"
        }
      ],
      "name": "StateUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "buyerAddress",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nftAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "projectState",
      "outputs": [
        {
          "internalType": "enum NftEscrow.ProjectState",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sellerAddress",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenID",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_NFTAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_TokenID",
          "type": "uint256"
        }
      ],
      "name": "depositNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cancelAtNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_state",
          "type": "bool"
        }
      ],
      "name": "cancelBeforeDelivery",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depositETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initiateDelivery",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "confirmDelivery",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum NftEscrow.ProjectState\",\"name\":\"state\",\"type\":\"uint8\"}],\"name\":\"StateUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"buyerAddress\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancelAtNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_state\",\"type\":\"bool\"}],\"name\":\"cancelBeforeDelivery\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"confirmDelivery\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_NFTAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_TokenID\",\"type\":\"uint256\"}],\"name\":\"depositNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initiateDelivery\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"projectState\",\"outputs\":[{\"internalType\":\"enum NftEscrow.ProjectState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellerAddress\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Escrow.sol\":\"NftEscrow\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x1ba5cf152c15dc0c785310feeb61e1f74387fc7bdc2aba5d90733f791606d4bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38db14c62d6431df042a7ca07fd021ea52ccdbd03f0be2b5c4ab034a56126d38\",\"dweb:/ipfs/QmbCHTCLP6bz8omQXrP8VuxFGdK9Hh3jqfrSTr38WNpTk4\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x872ba21af7c1f0ae04a715beca31e8fcac764d6c8762940b0fe1bfb6ed8e86f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://497017741d74878b56a67ad51e98061bd9ec0e6e4fdbfef0e2ab51523f4c16de\",\"dweb:/ipfs/QmWfkpRHksy8jFywqYxdmMqdkQ1hxrGTPoNBXbZ48zTvyv\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x483b106386dd309f168672928252a19f30c30efb4d17d4b8e2b0f587ca784a11\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://189a39d066c6886ddbe86c79bb36d6cbe66e98bc6a94956e28f5503dae4ad406\",\"dweb:/ipfs/QmT3s3PwCdXqHLJk26kcnedrRGTC9T18z52i9Be7PV9ppc\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x6052c25b1021f2b0e733fb52ca11948cb2f08cb66076397507243a6e8a8d7776\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://32ac4547a76b28021a007853958284aa8a15a64f1aeec83cb797b7fd60a46b56\",\"dweb:/ipfs/QmTJWQF8j586oaYNpdZv55xnzyHVQc68XN4eBNeiLbKX8d\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9944d1038f27dcebff810d7ba16b3b8058b967173d76874fb72dd7cd84129656\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c455cda07c5f8978c57e545ddde382552d3a55b6e3682e0f809ed07ec7defbe\",\"dweb:/ipfs/QmXkoKbxyMcMzjYdkXi5t4t3ZjBQ81pj7AaanS9jhePxyt\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x7736c187e6f1358c1ea9350a2a21aa8528dec1c2f43b374a9067465a3a51f5d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4fd625dca17657403af518cc6c8ab5c54c58898cf6e912ca2e1b0f3194ad0405\",\"dweb:/ipfs/QmQVv7YeeKmaS11bg7YDTeeGDk6i7sV8LMMfohaLM4SiRu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x5fa25f305839292fab713256214f2868e0257d29826b14282bbd7f1e34f5af38\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3de4074848249e00e1336db857e3fa8f78b4fe11d4a887f71050c22023b2132\",\"dweb:/ipfs/QmbL6k2zFGndQPNPG7vCDivtjKam3quJSrEbRuVsNo4hBw\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x905cd0ecd91d1de79a4679d745b79cf852ca8ccda5d25d1c49c6bd17a5edc0cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dd1601fcd370546d8c06ea1902d7e7364fc490fbf0ebc3004230ef1f5db473c\",\"dweb:/ipfs/Qmb8zbC3TjWFtcuyP3KEEaegMkPcfeKAcPrwzvkAoMR3cZ\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x6aa521718bf139b44ce56f194f6aea1d590cacef995b5a84703fb1579fa49be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://100f8d367b5e94eb9cb991914f1de133cf272654c0708faa893bbc17a5b35b93\",\"dweb:/ipfs/QmZeBojmgXq821dL1TJKFb58B1FogM9jL3u7hXQ8hTEBKT\"]},\"project:/contracts/Escrow.sol\":{\"keccak256\":\"0x8861d368437f870f583ae0322e8e9eeae44e60574f02f4fb1be659ef762f4ced\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb7f520377498498d466442a1d086d3b7a32a33a7462174ac93e47ac3ebfb494\",\"dweb:/ipfs/QmU4U1fas5ALgeQGG7FoxegMeDmZTGn6cMfCzmcXimRjZy\"]}},\"version\":1}",
  "bytecode": "0x60806040526000600460006101000a81548160ff0219169083151502179055506000600460016101000a81548160ff021916908315150217905550604051620015b4380380620015b483398181016040528101906200005f9190620001b6565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614620001165780600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000600460026101000a81548160ff021916908360068111156200013f576200013e620001fd565b5b021790555050506200022c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200017e8262000151565b9050919050565b620001908162000171565b81146200019c57600080fd5b50565b600081519050620001b08162000185565b92915050565b60008060408385031215620001d057620001cf6200014c565b5b6000620001e0858286016200019f565b9250506020620001f3858286016200019f565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b611378806200023c6000396000f3fe6080604052600436106100c25760003560e01c80635bf8633a1161007f5780639b5b9b18116100595780639b5b9b1814610218578063a1ee418114610241578063a5c42ef114610258578063f6326fb314610283576100c2565b80635bf8633a146101b85780635e10177b146101e3578063748807ab146101ed576100c2565b806312065fe0146100c7578063150b7a02146100f25780632f9fa7f61461012f578063342901a7146101465780633d9b2ae61461016257806344834aca1461018d575b600080fd5b3480156100d357600080fd5b506100dc61028d565b6040516100e99190610ee6565b60405180910390f35b3480156100fe57600080fd5b5061011960048036038101906101149190610ffa565b610295565b60405161012691906110bd565b60405180910390f35b34801561013b57600080fd5b506101446102aa565b005b610160600480360381019061015b9190611110565b61044a565b005b34801561016e57600080fd5b50610177610795565b604051610184919061115e565b60405180910390f35b34801561019957600080fd5b506101a26107b9565b6040516101af919061115e565b60405180910390f35b3480156101c457600080fd5b506101cd6107df565b6040516101da9190611188565b60405180910390f35b6101eb610805565b005b3480156101f957600080fd5b50610202610a30565b60405161020f919061121a565b60405180910390f35b34801561022457600080fd5b5061023f600480360381019061023a9190611235565b610a43565b005b34801561024d57600080fd5b50610256610c2d565b005b34801561026457600080fd5b5061026d610d79565b60405161027a9190610ee6565b60405180910390f35b61028b610d7f565b005b600047905090565b600063150b7a0260e01b905095945050505050565b60018060068111156102bf576102be6111a3565b5b600460029054906101000a900460ff1660068111156102e1576102e06111a3565b5b146102eb57600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461034357600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e30336003546040518463ffffffff1660e01b81526004016103a493929190611275565b600060405180830381600087803b1580156103be57600080fd5b505af11580156103d2573d6000803e3d6000fd5b505050506002600460026101000a81548160ff021916908360068111156103fc576103fb6111a3565b5b02179055507f23ad33ab6a13a00aa7d06cd167b2abd03dec86af3cf3cc91759dcd3ae8411887600460029054906101000a900460ff1660405161043f919061121a565b60405180910390a150565b600380600681111561045f5761045e6111a3565b5b600460029054906101000a900460ff166006811115610481576104806111a3565b5b1461048b57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610532575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61053b57600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156105ae5781600460016101000a81548160ff0219169083151502179055506105c9565b81600460006101000a81548160ff0219169083151502179055505b60011515600460019054906101000a900460ff1615151480156105ff575060011515600460009054906101000a900460ff161515145b1561079157600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e3060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff166003546040518463ffffffff1660e01b81526004016106859392919061130b565b600060405180830381600087803b15801561069f57600080fd5b505af11580156106b3573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561071f573d6000803e3d6000fd5b5060048060026101000a81548160ff02191690836006811115610745576107446111a3565b5b02179055507f23ad33ab6a13a00aa7d06cd167b2abd03dec86af3cf3cc91759dcd3ae8411887600460029054906101000a900460ff16604051610788919061121a565b60405180910390a15b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600580600681111561081a576108196111a3565b5b600460029054906101000a900460ff16600681111561083c5761083b6111a3565b5b1461084657600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108a057600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e30600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166003546040518463ffffffff1660e01b81526004016109239392919061130b565b600060405180830381600087803b15801561093d57600080fd5b505af1158015610951573d6000803e3d6000fd5b5050505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156109bb573d6000803e3d6000fd5b506006600460026101000a81548160ff021916908360068111156109e2576109e16111a3565b5b02179055507f23ad33ab6a13a00aa7d06cd167b2abd03dec86af3cf3cc91759dcd3ae8411887600460029054906101000a900460ff16604051610a25919061121a565b60405180910390a150565b600460029054906101000a900460ff1681565b6000806006811115610a5857610a576111a3565b5b600460029054906101000a900460ff166006811115610a7a57610a796111a3565b5b14610a8457600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610adc57600080fd5b82600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600381905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e33306003546040518463ffffffff1660e01b8152600401610b8593929190611275565b600060405180830381600087803b158015610b9f57600080fd5b505af1158015610bb3573d6000803e3d6000fd5b505050506001600460026101000a81548160ff02191690836006811115610bdd57610bdc6111a3565b5b02179055507f23ad33ab6a13a00aa7d06cd167b2abd03dec86af3cf3cc91759dcd3ae8411887600460029054906101000a900460ff16604051610c20919061121a565b60405180910390a1505050565b6003806006811115610c4257610c416111a3565b5b600460029054906101000a900460ff166006811115610c6457610c636111a3565b5b14610c6e57600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610cc657600080fd5b60001515600460009054906101000a900460ff161515148015610cfc575060001515600460019054906101000a900460ff161515145b610d0557600080fd5b6005600460026101000a81548160ff02191690836006811115610d2b57610d2a6111a3565b5b02179055507f23ad33ab6a13a00aa7d06cd167b2abd03dec86af3cf3cc91759dcd3ae8411887600460029054906101000a900460ff16604051610d6e919061121a565b60405180910390a150565b60035481565b6001806006811115610d9457610d936111a3565b5b600460029054906101000a900460ff166006811115610db657610db56111a3565b5b14610dc057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610e595733600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6003600460026101000a81548160ff02191690836006811115610e7f57610e7e6111a3565b5b02179055507f23ad33ab6a13a00aa7d06cd167b2abd03dec86af3cf3cc91759dcd3ae8411887600460029054906101000a900460ff16604051610ec2919061121a565b60405180910390a150565b6000819050919050565b610ee081610ecd565b82525050565b6000602082019050610efb6000830184610ed7565b92915050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f3682610f0b565b9050919050565b610f4681610f2b565b8114610f5157600080fd5b50565b600081359050610f6381610f3d565b92915050565b610f7281610ecd565b8114610f7d57600080fd5b50565b600081359050610f8f81610f69565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610fba57610fb9610f95565b5b8235905067ffffffffffffffff811115610fd757610fd6610f9a565b5b602083019150836001820283011115610ff357610ff2610f9f565b5b9250929050565b60008060008060006080868803121561101657611015610f01565b5b600061102488828901610f54565b955050602061103588828901610f54565b945050604061104688828901610f80565b935050606086013567ffffffffffffffff81111561106757611066610f06565b5b61107388828901610fa4565b92509250509295509295909350565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6110b781611082565b82525050565b60006020820190506110d260008301846110ae565b92915050565b60008115159050919050565b6110ed816110d8565b81146110f857600080fd5b50565b60008135905061110a816110e4565b92915050565b60006020828403121561112657611125610f01565b5b6000611134848285016110fb565b91505092915050565b600061114882610f0b565b9050919050565b6111588161113d565b82525050565b6000602082019050611173600083018461114f565b92915050565b61118281610f2b565b82525050565b600060208201905061119d6000830184611179565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600781106111e3576111e26111a3565b5b50565b60008190506111f4826111d2565b919050565b6000611204826111e6565b9050919050565b611214816111f9565b82525050565b600060208201905061122f600083018461120b565b92915050565b6000806040838503121561124c5761124b610f01565b5b600061125a85828601610f54565b925050602061126b85828601610f80565b9150509250929050565b600060608201905061128a6000830186611179565b6112976020830185611179565b6112a46040830184610ed7565b949350505050565b6000819050919050565b60006112d16112cc6112c784610f0b565b6112ac565b610f0b565b9050919050565b60006112e3826112b6565b9050919050565b60006112f5826112d8565b9050919050565b611305816112ea565b82525050565b60006060820190506113206000830186611179565b61132d60208301856112fc565b61133a6040830184610ed7565b94935050505056fea26469706673582212201026afaafb3876860044275add80b050242a80f5c0a725e639d4257ba2d5723964736f6c634300080a0033",
  "deployedBytecode": "0x6080604052600436106100c25760003560e01c80635bf8633a1161007f5780639b5b9b18116100595780639b5b9b1814610218578063a1ee418114610241578063a5c42ef114610258578063f6326fb314610283576100c2565b80635bf8633a146101b85780635e10177b146101e3578063748807ab146101ed576100c2565b806312065fe0146100c7578063150b7a02146100f25780632f9fa7f61461012f578063342901a7146101465780633d9b2ae61461016257806344834aca1461018d575b600080fd5b3480156100d357600080fd5b506100dc61028d565b6040516100e99190610ee6565b60405180910390f35b3480156100fe57600080fd5b5061011960048036038101906101149190610ffa565b610295565b60405161012691906110bd565b60405180910390f35b34801561013b57600080fd5b506101446102aa565b005b610160600480360381019061015b9190611110565b61044a565b005b34801561016e57600080fd5b50610177610795565b604051610184919061115e565b60405180910390f35b34801561019957600080fd5b506101a26107b9565b6040516101af919061115e565b60405180910390f35b3480156101c457600080fd5b506101cd6107df565b6040516101da9190611188565b60405180910390f35b6101eb610805565b005b3480156101f957600080fd5b50610202610a30565b60405161020f919061121a565b60405180910390f35b34801561022457600080fd5b5061023f600480360381019061023a9190611235565b610a43565b005b34801561024d57600080fd5b50610256610c2d565b005b34801561026457600080fd5b5061026d610d79565b60405161027a9190610ee6565b60405180910390f35b61028b610d7f565b005b600047905090565b600063150b7a0260e01b905095945050505050565b60018060068111156102bf576102be6111a3565b5b600460029054906101000a900460ff1660068111156102e1576102e06111a3565b5b146102eb57600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461034357600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e30336003546040518463ffffffff1660e01b81526004016103a493929190611275565b600060405180830381600087803b1580156103be57600080fd5b505af11580156103d2573d6000803e3d6000fd5b505050506002600460026101000a81548160ff021916908360068111156103fc576103fb6111a3565b5b02179055507f23ad33ab6a13a00aa7d06cd167b2abd03dec86af3cf3cc91759dcd3ae8411887600460029054906101000a900460ff1660405161043f919061121a565b60405180910390a150565b600380600681111561045f5761045e6111a3565b5b600460029054906101000a900460ff166006811115610481576104806111a3565b5b1461048b57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610532575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61053b57600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156105ae5781600460016101000a81548160ff0219169083151502179055506105c9565b81600460006101000a81548160ff0219169083151502179055505b60011515600460019054906101000a900460ff1615151480156105ff575060011515600460009054906101000a900460ff161515145b1561079157600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e3060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff166003546040518463ffffffff1660e01b81526004016106859392919061130b565b600060405180830381600087803b15801561069f57600080fd5b505af11580156106b3573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561071f573d6000803e3d6000fd5b5060048060026101000a81548160ff02191690836006811115610745576107446111a3565b5b02179055507f23ad33ab6a13a00aa7d06cd167b2abd03dec86af3cf3cc91759dcd3ae8411887600460029054906101000a900460ff16604051610788919061121a565b60405180910390a15b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600580600681111561081a576108196111a3565b5b600460029054906101000a900460ff16600681111561083c5761083b6111a3565b5b1461084657600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108a057600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e30600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166003546040518463ffffffff1660e01b81526004016109239392919061130b565b600060405180830381600087803b15801561093d57600080fd5b505af1158015610951573d6000803e3d6000fd5b5050505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156109bb573d6000803e3d6000fd5b506006600460026101000a81548160ff021916908360068111156109e2576109e16111a3565b5b02179055507f23ad33ab6a13a00aa7d06cd167b2abd03dec86af3cf3cc91759dcd3ae8411887600460029054906101000a900460ff16604051610a25919061121a565b60405180910390a150565b600460029054906101000a900460ff1681565b6000806006811115610a5857610a576111a3565b5b600460029054906101000a900460ff166006811115610a7a57610a796111a3565b5b14610a8457600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610adc57600080fd5b82600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600381905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e33306003546040518463ffffffff1660e01b8152600401610b8593929190611275565b600060405180830381600087803b158015610b9f57600080fd5b505af1158015610bb3573d6000803e3d6000fd5b505050506001600460026101000a81548160ff02191690836006811115610bdd57610bdc6111a3565b5b02179055507f23ad33ab6a13a00aa7d06cd167b2abd03dec86af3cf3cc91759dcd3ae8411887600460029054906101000a900460ff16604051610c20919061121a565b60405180910390a1505050565b6003806006811115610c4257610c416111a3565b5b600460029054906101000a900460ff166006811115610c6457610c636111a3565b5b14610c6e57600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610cc657600080fd5b60001515600460009054906101000a900460ff161515148015610cfc575060001515600460019054906101000a900460ff161515145b610d0557600080fd5b6005600460026101000a81548160ff02191690836006811115610d2b57610d2a6111a3565b5b02179055507f23ad33ab6a13a00aa7d06cd167b2abd03dec86af3cf3cc91759dcd3ae8411887600460029054906101000a900460ff16604051610d6e919061121a565b60405180910390a150565b60035481565b6001806006811115610d9457610d936111a3565b5b600460029054906101000a900460ff166006811115610db657610db56111a3565b5b14610dc057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610e595733600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6003600460026101000a81548160ff02191690836006811115610e7f57610e7e6111a3565b5b02179055507f23ad33ab6a13a00aa7d06cd167b2abd03dec86af3cf3cc91759dcd3ae8411887600460029054906101000a900460ff16604051610ec2919061121a565b60405180910390a150565b6000819050919050565b610ee081610ecd565b82525050565b6000602082019050610efb6000830184610ed7565b92915050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f3682610f0b565b9050919050565b610f4681610f2b565b8114610f5157600080fd5b50565b600081359050610f6381610f3d565b92915050565b610f7281610ecd565b8114610f7d57600080fd5b50565b600081359050610f8f81610f69565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610fba57610fb9610f95565b5b8235905067ffffffffffffffff811115610fd757610fd6610f9a565b5b602083019150836001820283011115610ff357610ff2610f9f565b5b9250929050565b60008060008060006080868803121561101657611015610f01565b5b600061102488828901610f54565b955050602061103588828901610f54565b945050604061104688828901610f80565b935050606086013567ffffffffffffffff81111561106757611066610f06565b5b61107388828901610fa4565b92509250509295509295909350565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6110b781611082565b82525050565b60006020820190506110d260008301846110ae565b92915050565b60008115159050919050565b6110ed816110d8565b81146110f857600080fd5b50565b60008135905061110a816110e4565b92915050565b60006020828403121561112657611125610f01565b5b6000611134848285016110fb565b91505092915050565b600061114882610f0b565b9050919050565b6111588161113d565b82525050565b6000602082019050611173600083018461114f565b92915050565b61118281610f2b565b82525050565b600060208201905061119d6000830184611179565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600781106111e3576111e26111a3565b5b50565b60008190506111f4826111d2565b919050565b6000611204826111e6565b9050919050565b611214816111f9565b82525050565b600060208201905061122f600083018461120b565b92915050565b6000806040838503121561124c5761124b610f01565b5b600061125a85828601610f54565b925050602061126b85828601610f80565b9150509250929050565b600060608201905061128a6000830186611179565b6112976020830185611179565b6112a46040830184610ed7565b949350505050565b6000819050919050565b60006112d16112cc6112c784610f0b565b6112ac565b610f0b565b9050919050565b60006112e3826112b6565b9050919050565b60006112f5826112d8565b9050919050565b611305816112ea565b82525050565b60006060820190506113206000830186611179565b61132d60208301856112fc565b61133a6040830184610ed7565b94935050505056fea26469706673582212201026afaafb3876860044275add80b050242a80f5c0a725e639d4257ba2d5723964736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1541:23",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:23",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:23",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:23"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:23"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:23",
                "type": ""
              }
            ],
            "src": "7:75:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:23",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:23",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:23"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:23",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:23",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:23"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:23",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:23"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:23"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:23",
                "type": ""
              }
            ],
            "src": "334:126:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:23"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:23"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:23"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:23",
                "type": ""
              }
            ],
            "src": "466:96:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:79:23",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "668:16:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:23",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "680:1:23",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:12:23"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:12:23"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "634:5:23"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:23"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "641:17:23"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "641:24:23"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "631:2:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:35:23"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:43:23"
                  },
                  "nodeType": "YulIf",
                  "src": "621:63:23"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "604:5:23",
                "type": ""
              }
            ],
            "src": "568:122:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "759:80:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "769:22:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "784:6:23"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "778:5:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "778:13:23"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "769:5:23"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "827:5:23"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "800:26:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "800:33:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "800:33:23"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "737:6:23",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "745:3:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "753:5:23",
                "type": ""
              }
            ],
            "src": "696:143:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "939:413:23",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "985:83:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "987:77:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "987:79:23"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "987:79:23"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "960:7:23"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "969:9:23"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "956:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "956:23:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "981:2:23",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "952:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "952:32:23"
                  },
                  "nodeType": "YulIf",
                  "src": "949:119:23"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1078:128:23",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1093:15:23",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1107:1:23",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1097:6:23",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1122:74:23",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1168:9:23"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1179:6:23"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1164:3:23"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1164:22:23"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1188:7:23"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1132:31:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1132:64:23"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1122:6:23"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1216:129:23",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1231:16:23",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1245:2:23",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1235:6:23",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1261:74:23",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1307:9:23"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1318:6:23"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1303:3:23"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1303:22:23"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1327:7:23"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1271:31:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1271:64:23"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1261:6:23"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "901:9:23",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "912:7:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "924:6:23",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "932:6:23",
                "type": ""
              }
            ],
            "src": "845:507:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1386:152:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1403:1:23",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1406:77:23",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1396:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1396:88:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1396:88:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1500:1:23",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1503:4:23",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1493:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1493:15:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1493:15:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1524:1:23",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1527:4:23",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1517:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1517:15:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1517:15:23"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "1358:180:23"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n",
      "id": 23,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:8583:23",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "52:32:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "62:16:23",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "73:5:23"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "62:7:23"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34:5:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "44:7:23",
                "type": ""
              }
            ],
            "src": "7:77:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "155:53:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "172:3:23"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "195:5:23"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "177:17:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "177:24:23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "165:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "165:37:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "165:37:23"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "143:5:23",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "150:3:23",
                "type": ""
              }
            ],
            "src": "90:118:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "312:124:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "322:26:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "334:9:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "345:2:23",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "330:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "330:18:23"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "322:4:23"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "402:6:23"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "415:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "426:1:23",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "411:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "411:17:23"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "358:43:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "358:71:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "358:71:23"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "284:9:23",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "296:6:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "307:4:23",
                "type": ""
              }
            ],
            "src": "214:222:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "482:35:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "492:19:23",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "508:2:23",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "502:5:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "502:9:23"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "492:6:23"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "475:6:23",
                "type": ""
              }
            ],
            "src": "442:75:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "612:28:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "629:1:23",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "632:1:23",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "622:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "622:12:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "622:12:23"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "523:117:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "735:28:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "752:1:23",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "755:1:23",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "745:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "745:12:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "745:12:23"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "646:117:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "814:81:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "824:65:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "839:5:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "846:42:23",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "835:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "835:54:23"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "824:7:23"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "796:5:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "806:7:23",
                "type": ""
              }
            ],
            "src": "769:126:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "946:51:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "956:35:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "985:5:23"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "967:17:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "967:24:23"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "956:7:23"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "928:5:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "938:7:23",
                "type": ""
              }
            ],
            "src": "901:96:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1046:79:23",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1103:16:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1112:1:23",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1115:1:23",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1105:6:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1105:12:23"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1105:12:23"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1069:5:23"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1094:5:23"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "1076:17:23"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1076:24:23"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1066:2:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1066:35:23"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1059:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1059:43:23"
                  },
                  "nodeType": "YulIf",
                  "src": "1056:63:23"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1039:5:23",
                "type": ""
              }
            ],
            "src": "1003:122:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1183:87:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1193:29:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1215:6:23"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1202:12:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1202:20:23"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1193:5:23"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1258:5:23"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1231:26:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1231:33:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1231:33:23"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1161:6:23",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1169:3:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1177:5:23",
                "type": ""
              }
            ],
            "src": "1131:139:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1319:79:23",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1376:16:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1385:1:23",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1388:1:23",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1378:6:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1378:12:23"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1378:12:23"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1342:5:23"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1367:5:23"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "1349:17:23"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1349:24:23"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1339:2:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1339:35:23"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1332:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1332:43:23"
                  },
                  "nodeType": "YulIf",
                  "src": "1329:63:23"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1312:5:23",
                "type": ""
              }
            ],
            "src": "1276:122:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1456:87:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1466:29:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1488:6:23"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1475:12:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1475:20:23"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1466:5:23"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1531:5:23"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1504:26:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1504:33:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1504:33:23"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1434:6:23",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1442:3:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1450:5:23",
                "type": ""
              }
            ],
            "src": "1404:139:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1638:28:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1655:1:23",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1658:1:23",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1648:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1648:12:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1648:12:23"
                }
              ]
            },
            "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
            "nodeType": "YulFunctionDefinition",
            "src": "1549:117:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1761:28:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1778:1:23",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1781:1:23",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1771:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1771:12:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1771:12:23"
                }
              ]
            },
            "name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
            "nodeType": "YulFunctionDefinition",
            "src": "1672:117:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1884:28:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1901:1:23",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1904:1:23",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1894:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1894:12:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1894:12:23"
                }
              ]
            },
            "name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
            "nodeType": "YulFunctionDefinition",
            "src": "1795:117:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2005:478:23",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2054:83:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                            "nodeType": "YulIdentifier",
                            "src": "2056:77:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2056:79:23"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2056:79:23"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2033:6:23"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2041:4:23",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2029:3:23"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2029:17:23"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "2048:3:23"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2025:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2025:27:23"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2018:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2018:35:23"
                  },
                  "nodeType": "YulIf",
                  "src": "2015:122:23"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2146:30:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2169:6:23"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2156:12:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2156:20:23"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "2146:6:23"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2219:83:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
                            "nodeType": "YulIdentifier",
                            "src": "2221:77:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2221:79:23"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2221:79:23"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2191:6:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2199:18:23",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2188:2:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2188:30:23"
                  },
                  "nodeType": "YulIf",
                  "src": "2185:117:23"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2311:29:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2327:6:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2335:4:23",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2323:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2323:17:23"
                  },
                  "variableNames": [
                    {
                      "name": "arrayPos",
                      "nodeType": "YulIdentifier",
                      "src": "2311:8:23"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2394:83:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
                            "nodeType": "YulIdentifier",
                            "src": "2396:77:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2396:79:23"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2396:79:23"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "arrayPos",
                            "nodeType": "YulIdentifier",
                            "src": "2359:8:23"
                          },
                          {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "2373:6:23"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2381:4:23",
                                "type": "",
                                "value": "0x01"
                              }
                            ],
                            "functionName": {
                              "name": "mul",
                              "nodeType": "YulIdentifier",
                              "src": "2369:3:23"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2369:17:23"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2355:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2355:32:23"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "2389:3:23"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2352:2:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2352:41:23"
                  },
                  "nodeType": "YulIf",
                  "src": "2349:128:23"
                }
              ]
            },
            "name": "abi_decode_t_bytes_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1972:6:23",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1980:3:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "arrayPos",
                "nodeType": "YulTypedName",
                "src": "1988:8:23",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1998:6:23",
                "type": ""
              }
            ],
            "src": "1931:552:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2625:827:23",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2672:83:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2674:77:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2674:79:23"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2674:79:23"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2646:7:23"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2655:9:23"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2642:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2642:23:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2667:3:23",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2638:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2638:33:23"
                  },
                  "nodeType": "YulIf",
                  "src": "2635:120:23"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2765:117:23",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2780:15:23",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2794:1:23",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2784:6:23",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2809:63:23",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2844:9:23"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2855:6:23"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2840:3:23"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2840:22:23"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2864:7:23"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2819:20:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2819:53:23"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2809:6:23"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2892:118:23",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2907:16:23",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2921:2:23",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2911:6:23",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2937:63:23",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2972:9:23"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2983:6:23"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2968:3:23"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2968:22:23"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2992:7:23"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2947:20:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2947:53:23"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2937:6:23"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3020:118:23",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3035:16:23",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3049:2:23",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3039:6:23",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3065:63:23",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3100:9:23"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3111:6:23"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3096:3:23"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3096:22:23"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3120:7:23"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3075:20:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3075:53:23"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "3065:6:23"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3148:297:23",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3163:46:23",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3194:9:23"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3205:2:23",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3190:3:23"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3190:18:23"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "3177:12:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3177:32:23"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3167:6:23",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3256:83:23",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                "nodeType": "YulIdentifier",
                                "src": "3258:77:23"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3258:79:23"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3258:79:23"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3228:6:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3236:18:23",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3225:2:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3225:30:23"
                      },
                      "nodeType": "YulIf",
                      "src": "3222:117:23"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3353:82:23",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3407:9:23"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3418:6:23"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3403:3:23"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3403:22:23"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3427:7:23"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes_calldata_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "3371:31:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3371:64:23"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "3353:6:23"
                        },
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "3361:6:23"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2563:9:23",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2574:7:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2586:6:23",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2594:6:23",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2602:6:23",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2610:6:23",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "2618:6:23",
                "type": ""
              }
            ],
            "src": "2489:963:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3502:105:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3512:89:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3527:5:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3534:66:23",
                        "type": "",
                        "value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3523:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3523:78:23"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3512:7:23"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3484:5:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3494:7:23",
                "type": ""
              }
            ],
            "src": "3458:149:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3676:52:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3693:3:23"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3715:5:23"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bytes4",
                          "nodeType": "YulIdentifier",
                          "src": "3698:16:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3698:23:23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3686:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3686:36:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3686:36:23"
                }
              ]
            },
            "name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3664:5:23",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3671:3:23",
                "type": ""
              }
            ],
            "src": "3613:115:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3830:122:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3840:26:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3852:9:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3863:2:23",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3848:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3848:18:23"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3840:4:23"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3918:6:23"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3931:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3942:1:23",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3927:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3927:17:23"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3876:41:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3876:69:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3876:69:23"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3802:9:23",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3814:6:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3825:4:23",
                "type": ""
              }
            ],
            "src": "3734:218:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4000:48:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4010:32:23",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4035:5:23"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "4028:6:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4028:13:23"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4021:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4021:21:23"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "4010:7:23"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3982:5:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3992:7:23",
                "type": ""
              }
            ],
            "src": "3958:90:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4094:76:23",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4148:16:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4157:1:23",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4160:1:23",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4150:6:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4150:12:23"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4150:12:23"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4117:5:23"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4139:5:23"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "4124:14:23"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4124:21:23"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "4114:2:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4114:32:23"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4107:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4107:40:23"
                  },
                  "nodeType": "YulIf",
                  "src": "4104:60:23"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4087:5:23",
                "type": ""
              }
            ],
            "src": "4054:116:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4225:84:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4235:29:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "4257:6:23"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4244:12:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4244:20:23"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "4235:5:23"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4297:5:23"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "4273:23:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4273:30:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4273:30:23"
                }
              ]
            },
            "name": "abi_decode_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "4203:6:23",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4211:3:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4219:5:23",
                "type": ""
              }
            ],
            "src": "4176:133:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4378:260:23",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4424:83:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "4426:77:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4426:79:23"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4426:79:23"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4399:7:23"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4408:9:23"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4395:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4395:23:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4420:2:23",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4391:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4391:32:23"
                  },
                  "nodeType": "YulIf",
                  "src": "4388:119:23"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4517:114:23",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4532:15:23",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4546:1:23",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4536:6:23",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4561:60:23",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4593:9:23"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4604:6:23"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4589:3:23"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4589:22:23"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4613:7:23"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "4571:17:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4571:50:23"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4561:6:23"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4348:9:23",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4359:7:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4371:6:23",
                "type": ""
              }
            ],
            "src": "4315:323:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4697:51:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4707:35:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4736:5:23"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "4718:17:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4718:24:23"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "4707:7:23"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4679:5:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "4689:7:23",
                "type": ""
              }
            ],
            "src": "4644:104:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4835:61:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4852:3:23"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4883:5:23"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "4857:25:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4857:32:23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4845:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4845:45:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4845:45:23"
                }
              ]
            },
            "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4823:5:23",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4830:3:23",
                "type": ""
              }
            ],
            "src": "4754:142:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5016:140:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5026:26:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5038:9:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5049:2:23",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5034:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5034:18:23"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5026:4:23"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5122:6:23"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5135:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5146:1:23",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5131:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5131:17:23"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5062:59:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5062:87:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5062:87:23"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4988:9:23",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5000:6:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5011:4:23",
                "type": ""
              }
            ],
            "src": "4902:254:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5227:53:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5244:3:23"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5267:5:23"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "5249:17:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5249:24:23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5237:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5237:37:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5237:37:23"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5215:5:23",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5222:3:23",
                "type": ""
              }
            ],
            "src": "5162:118:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5384:124:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5394:26:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5406:9:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5417:2:23",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5402:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5402:18:23"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5394:4:23"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5474:6:23"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5487:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5498:1:23",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5483:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5483:17:23"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5430:43:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5430:71:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5430:71:23"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5356:9:23",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5368:6:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5379:4:23",
                "type": ""
              }
            ],
            "src": "5286:222:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5542:152:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5559:1:23",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5562:77:23",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5552:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5552:88:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5552:88:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5656:1:23",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5659:4:23",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5649:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5649:15:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5649:15:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5680:1:23",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5683:4:23",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "5673:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5673:15:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5673:15:23"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "5514:180:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5760:62:23",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5794:22:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x21",
                            "nodeType": "YulIdentifier",
                            "src": "5796:16:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5796:18:23"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5796:18:23"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5783:5:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5790:1:23",
                            "type": "",
                            "value": "7"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "5780:2:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5780:12:23"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5773:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5773:20:23"
                  },
                  "nodeType": "YulIf",
                  "src": "5770:46:23"
                }
              ]
            },
            "name": "validator_assert_t_enum$_ProjectState_$2878",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5753:5:23",
                "type": ""
              }
            ],
            "src": "5700:122:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5890:83:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5900:16:23",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "5911:5:23"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "5900:7:23"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5961:5:23"
                      }
                    ],
                    "functionName": {
                      "name": "validator_assert_t_enum$_ProjectState_$2878",
                      "nodeType": "YulIdentifier",
                      "src": "5917:43:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5917:50:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5917:50:23"
                }
              ]
            },
            "name": "cleanup_t_enum$_ProjectState_$2878",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5872:5:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "5882:7:23",
                "type": ""
              }
            ],
            "src": "5828:145:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6054:70:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6064:54:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6112:5:23"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_enum$_ProjectState_$2878",
                      "nodeType": "YulIdentifier",
                      "src": "6077:34:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6077:41:23"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "6064:9:23"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_enum$_ProjectState_$2878_to_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6034:5:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "6044:9:23",
                "type": ""
              }
            ],
            "src": "5979:145:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6210:81:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6227:3:23"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6278:5:23"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_enum$_ProjectState_$2878_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "6232:45:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6232:52:23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6220:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6220:65:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6220:65:23"
                }
              ]
            },
            "name": "abi_encode_t_enum$_ProjectState_$2878_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6198:5:23",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6205:3:23",
                "type": ""
              }
            ],
            "src": "6130:161:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6410:139:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6420:26:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6432:9:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6443:2:23",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6428:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6428:18:23"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6420:4:23"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6515:6:23"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6528:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6539:1:23",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6524:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6524:17:23"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_ProjectState_$2878_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6456:58:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6456:86:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6456:86:23"
                }
              ]
            },
            "name": "abi_encode_tuple_t_enum$_ProjectState_$2878__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6382:9:23",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6394:6:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6405:4:23",
                "type": ""
              }
            ],
            "src": "6297:252:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6638:391:23",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6684:83:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "6686:77:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6686:79:23"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6686:79:23"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6659:7:23"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6668:9:23"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6655:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6655:23:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6680:2:23",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6651:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6651:32:23"
                  },
                  "nodeType": "YulIf",
                  "src": "6648:119:23"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6777:117:23",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6792:15:23",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6806:1:23",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6796:6:23",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6821:63:23",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6856:9:23"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6867:6:23"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6852:3:23"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6852:22:23"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6876:7:23"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "6831:20:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6831:53:23"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "6821:6:23"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6904:118:23",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6919:16:23",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6933:2:23",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6923:6:23",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6949:63:23",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6984:9:23"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6995:6:23"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6980:3:23"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6980:22:23"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7004:7:23"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "6959:20:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6959:53:23"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "6949:6:23"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6600:9:23",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6611:7:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6623:6:23",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6631:6:23",
                "type": ""
              }
            ],
            "src": "6555:474:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7189:288:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7199:26:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7211:9:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7222:2:23",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7207:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7207:18:23"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7199:4:23"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7279:6:23"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7292:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7303:1:23",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7288:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7288:17:23"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7235:43:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7235:71:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7235:71:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7360:6:23"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7373:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7384:2:23",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7369:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7369:18:23"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7316:43:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7316:72:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7316:72:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "7442:6:23"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7455:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7466:2:23",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7451:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7451:18:23"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7398:43:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7398:72:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7398:72:23"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7145:9:23",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7157:6:23",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7165:6:23",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7173:6:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7184:4:23",
                "type": ""
              }
            ],
            "src": "7035:442:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7515:28:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7525:12:23",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "7532:5:23"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "7525:3:23"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7501:5:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "7511:3:23",
                "type": ""
              }
            ],
            "src": "7483:60:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7609:82:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7619:66:23",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7677:5:23"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "7659:17:23"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7659:24:23"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "7650:8:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7650:34:23"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "7632:17:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7632:53:23"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "7619:9:23"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7589:5:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "7599:9:23",
                "type": ""
              }
            ],
            "src": "7549:142:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7757:66:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7767:50:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7811:5:23"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "7780:30:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7780:37:23"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "7767:9:23"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7737:5:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "7747:9:23",
                "type": ""
              }
            ],
            "src": "7697:126:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7897:66:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7907:50:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7951:5:23"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "7920:30:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7920:37:23"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "7907:9:23"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_address_payable_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7877:5:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "7887:9:23",
                "type": ""
              }
            ],
            "src": "7829:134:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8042:74:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8059:3:23"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8103:5:23"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_address_payable_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "8064:38:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8064:45:23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8052:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8052:58:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8052:58:23"
                }
              ]
            },
            "name": "abi_encode_t_address_payable_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8030:5:23",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8037:3:23",
                "type": ""
              }
            ],
            "src": "7969:147:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8284:296:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8294:26:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8306:9:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8317:2:23",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8302:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8302:18:23"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8294:4:23"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8374:6:23"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8387:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8398:1:23",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8383:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8383:17:23"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8330:43:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8330:71:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8330:71:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8463:6:23"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8476:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8487:2:23",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8472:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8472:18:23"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8411:51:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8411:80:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8411:80:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "8545:6:23"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8558:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8569:2:23",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8554:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8554:18:23"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8501:43:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8501:72:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8501:72:23"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8240:9:23",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "8252:6:23",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8260:6:23",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8268:6:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8279:4:23",
                "type": ""
              }
            ],
            "src": "8122:458:23"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3, value4 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_ProjectState_$2878(value) {\n        if iszero(lt(value, 7)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_ProjectState_$2878(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_ProjectState_$2878(value)\n    }\n\n    function convert_t_enum$_ProjectState_$2878_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_ProjectState_$2878(value)\n    }\n\n    function abi_encode_t_enum$_ProjectState_$2878_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_ProjectState_$2878_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_ProjectState_$2878__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_ProjectState_$2878_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_address_payable_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_address_payable_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
      "id": 23,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "194:4003:17:-:0;;;555:5;527:33;;;;;;;;;;;;;;;;;;;;596:5;567:34;;;;;;;;;;;;;;;;;;;;696:239;;;;;;;;;;;;;;;;;;;;;:::i;:::-;782:6;758:13;;:31;;;;;;;;;;;;;;;;;;820:1;803:19;;:5;:19;;;800:80;;862:5;839:12;;:29;;;;;;;;;;;;;;;;;;800:80;905:22;890:12;;:37;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;696:239;;194:4003;;88:117:23;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:180::-;1406:77;1403:1;1396:88;1503:4;1500:1;1493:15;1527:4;1524:1;1517:15;194:4003:17;;;;;;;",
  "deployedSourceMap": "194:4003:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4055:139;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;943:186;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1548:295;;;;;;;;;;;;;:::i;:::-;;1853:657;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;381:36;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;424:35;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;466:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3113:378;;;:::i;:::-;;608:32;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1141:395;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2848:245;;;;;;;;;;;;;:::i;:::-;;498:22;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2522:314;;;:::i;:::-;;4055:139;4125:15;4165:21;4158:28;;4055:139;:::o;943:186::-;1065:6;1091:30;;;1084:37;;943:186;;;;;;;:::o;1548:295::-;1611:25;4029:6;4013:22;;;;;;;;:::i;:::-;;:12;;;;;;;;;;;:22;;;;;;;;:::i;:::-;;;4005:31;;;;;;3632:13:::1;::::0;::::1;;;;;;;;3618:27;;:10;:27;;;3610:36;;;::::0;::::1;;1681:10:::2;;;;;;;;;;;1674:35;;;1718:4;1725:10;1737:7;;1674:71;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;1771:22;1756:12;;:37;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1809:26;1822:12;;;;;;;;;;;1809:26;;;;;;:::i;:::-;;;;;;;;1548:295:::0;:::o;1853:657::-;1936:25;4029:6;4013:22;;;;;;;;:::i;:::-;;:12;;;;;;;;;;;:22;;;;;;;;:::i;:::-;;;4005:31;;;;;;3894:12:::1;;;;;;;;;;;3880:26;;:10;:26;;;:57;;;;3924:13;::::0;::::1;;;;;;;;3910:27;;:10;:27;;;3880:57;3872:66;;;::::0;::::1;;2037:13:::2;::::0;::::2;;;;;;;;2023:27;;:10;:27;;;2019:141;;;2081:6;2066:12;;:21;;;;;;;;;;;;;;;;;;2019:141;;;2142:6;2128:11;;:20;;;;;;;;;;;;;;;;;;2019:141;2200:4;2184:20;;:12;;;;;;;;;;;:20;;;:43;;;;;2223:4;2208:19;;:11;;;;;;;;;;;:19;;;2184:43;2180:323;;;2250:10;;;;;;;;;;;2243:35;;;2287:4;2294:13;::::0;::::2;;;;;;;;2309:7;;2243:74;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;2332:12;;;;;;;;;;;:21;;:44;2354:21;2332:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;2406:35;2391:12:::0;::::2;:50;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2465:26;2478:12;;;;;;;;;;;2465:26;;;;;;:::i;:::-;;;;;;;;2180:323;1853:657:::0;;:::o;381:36::-;;;;;;;;;;;;:::o;424:35::-;;;;;;;;;;;;;:::o;466:25::-;;;;;;;;;;;;;:::o;3113:378::-;3197:30;4029:6;4013:22;;;;;;;;:::i;:::-;;:12;;;;;;;;;;;:22;;;;;;;;:::i;:::-;;;4005:31;;;;;;3710:12:::1;;;;;;;;;;;3696:26;;:10;:26;;;3688:35;;;::::0;::::1;;3271:10:::2;;;;;;;;;;;3264:35;;;3308:4;3315:12;;;;;;;;;;;3329:7;;3264:73;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;3348:13;::::0;::::2;;;;;;;;:22;;:45;3371:21;3348:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;3419:22;3404:12;;:37;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;3457:26;3470:12;;;;;;;;;;;3457:26;;;;;;:::i;:::-;;;;;;;;3113:378:::0;:::o;608:32::-;;;;;;;;;;;;;:::o;1141:395::-;1240:22;4029:6;4013:22;;;;;;;;:::i;:::-;;:12;;;;;;;;;;;:22;;;;;;;;:::i;:::-;;;4005:31;;;;;;3632:13:::1;::::0;::::1;;;;;;;;3618:27;;:10;:27;;;3610:36;;;::::0;::::1;;1313:11:::2;1300:10;;:24;;;;;;;;;;;;;;;;;;1345:8;1335:7;:18;;;;1371:10;;;;;;;;;;;1364:35;;;1400:10;1420:4;1427:7;;1364:71;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;1461:25;1446:12;;:40;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1502:26;1515:12;;;;;;;;;;;1502:26;;;;;;:::i;:::-;;;;;;;;1141:395:::0;;;:::o;2848:245::-;2916:25;4029:6;4013:22;;;;;;;;:::i;:::-;;:12;;;;;;;;;;;:22;;;;;;;;:::i;:::-;;;4005:31;;;;;;3632:13:::1;::::0;::::1;;;;;;;;3618:27;;:10;:27;;;3610:36;;;::::0;::::1;;3791:5:::2;3776:20;;:11;;;;;;;;;;;:20;;;:45;;;;;3816:5;3800:21;;:12;;;;;;;;;;;:21;;;3776:45;3768:54;;;::::0;::::2;;3013:30:::3;2998:12;;:45;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;3059:26;3072:12;;;;;;;;;;;3059:26;;;;;;:::i;:::-;;;;;;;;2848:245:::0;:::o;498:22::-;;;;:::o;2522:314::-;2601:25;4029:6;4013:22;;;;;;;;:::i;:::-;;:12;;;;;;;;;;;:22;;;;;;;;:::i;:::-;;;4005:31;;;;;;2671:1:::1;2647:26;;:12;;;;;;;;;;;:26;;;2644:92;;;2713:10;2690:12;;:34;;;;;;;;;;;;;;;;;;2644:92;2761:25;2746:12;;:40;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2802:26;2815:12;;;;;;;;;;;2802:26;;;;;;:::i;:::-;;;;;;;;2522:314:::0;:::o;7:77:23:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;646:117;755:1;752;745:12;769:126;806:7;846:42;839:5;835:54;824:65;;769:126;;;:::o;901:96::-;938:7;967:24;985:5;967:24;:::i;:::-;956:35;;901:96;;;:::o;1003:122::-;1076:24;1094:5;1076:24;:::i;:::-;1069:5;1066:35;1056:63;;1115:1;1112;1105:12;1056:63;1003:122;:::o;1131:139::-;1177:5;1215:6;1202:20;1193:29;;1231:33;1258:5;1231:33;:::i;:::-;1131:139;;;;:::o;1276:122::-;1349:24;1367:5;1349:24;:::i;:::-;1342:5;1339:35;1329:63;;1388:1;1385;1378:12;1329:63;1276:122;:::o;1404:139::-;1450:5;1488:6;1475:20;1466:29;;1504:33;1531:5;1504:33;:::i;:::-;1404:139;;;;:::o;1549:117::-;1658:1;1655;1648:12;1672:117;1781:1;1778;1771:12;1795:117;1904:1;1901;1894:12;1931:552;1988:8;1998:6;2048:3;2041:4;2033:6;2029:17;2025:27;2015:122;;2056:79;;:::i;:::-;2015:122;2169:6;2156:20;2146:30;;2199:18;2191:6;2188:30;2185:117;;;2221:79;;:::i;:::-;2185:117;2335:4;2327:6;2323:17;2311:29;;2389:3;2381:4;2373:6;2369:17;2359:8;2355:32;2352:41;2349:128;;;2396:79;;:::i;:::-;2349:128;1931:552;;;;;:::o;2489:963::-;2586:6;2594;2602;2610;2618;2667:3;2655:9;2646:7;2642:23;2638:33;2635:120;;;2674:79;;:::i;:::-;2635:120;2794:1;2819:53;2864:7;2855:6;2844:9;2840:22;2819:53;:::i;:::-;2809:63;;2765:117;2921:2;2947:53;2992:7;2983:6;2972:9;2968:22;2947:53;:::i;:::-;2937:63;;2892:118;3049:2;3075:53;3120:7;3111:6;3100:9;3096:22;3075:53;:::i;:::-;3065:63;;3020:118;3205:2;3194:9;3190:18;3177:32;3236:18;3228:6;3225:30;3222:117;;;3258:79;;:::i;:::-;3222:117;3371:64;3427:7;3418:6;3407:9;3403:22;3371:64;:::i;:::-;3353:82;;;;3148:297;2489:963;;;;;;;;:::o;3458:149::-;3494:7;3534:66;3527:5;3523:78;3512:89;;3458:149;;;:::o;3613:115::-;3698:23;3715:5;3698:23;:::i;:::-;3693:3;3686:36;3613:115;;:::o;3734:218::-;3825:4;3863:2;3852:9;3848:18;3840:26;;3876:69;3942:1;3931:9;3927:17;3918:6;3876:69;:::i;:::-;3734:218;;;;:::o;3958:90::-;3992:7;4035:5;4028:13;4021:21;4010:32;;3958:90;;;:::o;4054:116::-;4124:21;4139:5;4124:21;:::i;:::-;4117:5;4114:32;4104:60;;4160:1;4157;4150:12;4104:60;4054:116;:::o;4176:133::-;4219:5;4257:6;4244:20;4235:29;;4273:30;4297:5;4273:30;:::i;:::-;4176:133;;;;:::o;4315:323::-;4371:6;4420:2;4408:9;4399:7;4395:23;4391:32;4388:119;;;4426:79;;:::i;:::-;4388:119;4546:1;4571:50;4613:7;4604:6;4593:9;4589:22;4571:50;:::i;:::-;4561:60;;4517:114;4315:323;;;;:::o;4644:104::-;4689:7;4718:24;4736:5;4718:24;:::i;:::-;4707:35;;4644:104;;;:::o;4754:142::-;4857:32;4883:5;4857:32;:::i;:::-;4852:3;4845:45;4754:142;;:::o;4902:254::-;5011:4;5049:2;5038:9;5034:18;5026:26;;5062:87;5146:1;5135:9;5131:17;5122:6;5062:87;:::i;:::-;4902:254;;;;:::o;5162:118::-;5249:24;5267:5;5249:24;:::i;:::-;5244:3;5237:37;5162:118;;:::o;5286:222::-;5379:4;5417:2;5406:9;5402:18;5394:26;;5430:71;5498:1;5487:9;5483:17;5474:6;5430:71;:::i;:::-;5286:222;;;;:::o;5514:180::-;5562:77;5559:1;5552:88;5659:4;5656:1;5649:15;5683:4;5680:1;5673:15;5700:122;5790:1;5783:5;5780:12;5770:46;;5796:18;;:::i;:::-;5770:46;5700:122;:::o;5828:145::-;5882:7;5911:5;5900:16;;5917:50;5961:5;5917:50;:::i;:::-;5828:145;;;:::o;5979:::-;6044:9;6077:41;6112:5;6077:41;:::i;:::-;6064:54;;5979:145;;;:::o;6130:161::-;6232:52;6278:5;6232:52;:::i;:::-;6227:3;6220:65;6130:161;;:::o;6297:252::-;6405:4;6443:2;6432:9;6428:18;6420:26;;6456:86;6539:1;6528:9;6524:17;6515:6;6456:86;:::i;:::-;6297:252;;;;:::o;6555:474::-;6623:6;6631;6680:2;6668:9;6659:7;6655:23;6651:32;6648:119;;;6686:79;;:::i;:::-;6648:119;6806:1;6831:53;6876:7;6867:6;6856:9;6852:22;6831:53;:::i;:::-;6821:63;;6777:117;6933:2;6959:53;7004:7;6995:6;6984:9;6980:22;6959:53;:::i;:::-;6949:63;;6904:118;6555:474;;;;;:::o;7035:442::-;7184:4;7222:2;7211:9;7207:18;7199:26;;7235:71;7303:1;7292:9;7288:17;7279:6;7235:71;:::i;:::-;7316:72;7384:2;7373:9;7369:18;7360:6;7316:72;:::i;:::-;7398;7466:2;7455:9;7451:18;7442:6;7398:72;:::i;:::-;7035:442;;;;;;:::o;7483:60::-;7511:3;7532:5;7525:12;;7483:60;;;:::o;7549:142::-;7599:9;7632:53;7650:34;7659:24;7677:5;7659:24;:::i;:::-;7650:34;:::i;:::-;7632:53;:::i;:::-;7619:66;;7549:142;;;:::o;7697:126::-;7747:9;7780:37;7811:5;7780:37;:::i;:::-;7767:50;;7697:126;;;:::o;7829:134::-;7887:9;7920:37;7951:5;7920:37;:::i;:::-;7907:50;;7829:134;;;:::o;7969:147::-;8064:45;8103:5;8064:45;:::i;:::-;8059:3;8052:58;7969:147;;:::o;8122:458::-;8279:4;8317:2;8306:9;8302:18;8294:26;;8330:71;8398:1;8387:9;8383:17;8374:6;8330:71;:::i;:::-;8411:80;8487:2;8476:9;8472:18;8463:6;8411:80;:::i;:::-;8501:72;8569:2;8558:9;8554:18;8545:6;8501:72;:::i;:::-;8122:458;;;;;;:::o",
  "source": "\r\n//SPDX-License-Identifier: MIT\r\n \r\npragma solidity ^0.8.10;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\r\n\r\ncontract NftEscrow is IERC721Receiver {\r\n    \r\n    enum ProjectState { newEscrow, nftDeposited, cancelNFT, ethDeposited, canceledBeforeDelivery, deliveryInitiated, delivered }\r\n    \r\n    address payable public sellerAddress;\r\n    address payable public buyerAddress;\r\n    address public nftAddress;\r\n    uint256 public tokenID;\r\n    bool internal buyerCancel = false;\r\n    bool internal sellerCancel = false;\r\n    ProjectState public projectState;\r\n\r\n    event StateUpdated(ProjectState state);\r\n\r\n    constructor(address sender, address buyer) payable {\r\n        sellerAddress = payable(sender);\r\n        if(buyer != address(0)) {\r\n            buyerAddress = payable(buyer);\r\n        }\r\n        projectState = ProjectState.newEscrow;\r\n    }\r\n\r\n    function onERC721Received(address operator, address from, uint256 tokenId, bytes calldata data ) public override returns (bytes4) {\r\n        return this.onERC721Received.selector;\r\n    }\r\n    \r\n    function depositNFT(address _NFTAddress, uint256 _TokenID)\r\n        public\r\n        inProjectState(ProjectState.newEscrow)\r\n        onlySeller\r\n    {\r\n        nftAddress = _NFTAddress;\r\n        tokenID = _TokenID;\r\n        ERC721(nftAddress).safeTransferFrom(msg.sender, address(this), tokenID);\r\n        projectState = ProjectState.nftDeposited;\r\n        emit StateUpdated(projectState);\r\n    }\r\n    \r\n    function cancelAtNFT()\r\n        public\r\n        inProjectState(ProjectState.nftDeposited)\r\n        onlySeller\r\n    {\r\n        ERC721(nftAddress).safeTransferFrom(address(this), msg.sender, tokenID);\r\n        projectState = ProjectState.cancelNFT;\r\n        emit StateUpdated(projectState);\r\n    }\r\n  \r\n    function cancelBeforeDelivery(bool _state)\r\n        public\r\n        inProjectState(ProjectState.ethDeposited)\r\n        payable\r\n        BuyerOrSeller\r\n    {\r\n        if (msg.sender == sellerAddress){\r\n            sellerCancel = _state;\r\n        }\r\n        else{\r\n            buyerCancel = _state;\r\n        }\r\n        \r\n        if (sellerCancel == true && buyerCancel == true){\r\n            ERC721(nftAddress).safeTransferFrom(address(this), sellerAddress, tokenID);\r\n            buyerAddress.transfer(address(this).balance);\r\n            projectState = ProjectState.canceledBeforeDelivery;    \r\n            emit StateUpdated(projectState);\r\n        }\r\n    }\r\n    \r\n    function depositETH()\r\n        public\r\n        payable\r\n        inProjectState(ProjectState.nftDeposited)\r\n    {\r\n        if(buyerAddress == address(0)) {\r\n            buyerAddress = payable(msg.sender);\r\n        }\r\n        projectState = ProjectState.ethDeposited;\r\n        emit StateUpdated(projectState);\r\n    }\r\n    \r\n    function initiateDelivery()\r\n        public\r\n        inProjectState(ProjectState.ethDeposited)\r\n        onlySeller\r\n        noDispute\r\n    {\r\n        projectState = ProjectState.deliveryInitiated;\r\n        emit StateUpdated(projectState);\r\n    }        \r\n    \r\n    function confirmDelivery()\r\n        public\r\n        payable\r\n        inProjectState(ProjectState.deliveryInitiated)\r\n        onlyBuyer\r\n    {\r\n        ERC721(nftAddress).safeTransferFrom(address(this), buyerAddress, tokenID);\r\n        sellerAddress.transfer(address(this).balance);\r\n        projectState = ProjectState.delivered;\r\n        emit StateUpdated(projectState);\r\n    }\r\n        \r\n   \tmodifier condition(bool _condition) {\r\n\t\trequire(_condition);\r\n\t\t_;\r\n\t}\r\n\r\n\tmodifier onlySeller() {\r\n\t\trequire(msg.sender == sellerAddress);\r\n\t\t_;\r\n\t}\r\n\r\n\tmodifier onlyBuyer() {\r\n\t\trequire(msg.sender == buyerAddress);\r\n\t\t_;\r\n\t}\r\n\t\r\n\tmodifier noDispute(){\r\n\t    require(buyerCancel == false && sellerCancel == false);\r\n\t    _;\r\n\t}\r\n\t\r\n\tmodifier BuyerOrSeller() {\r\n\t\trequire(msg.sender == buyerAddress || msg.sender == sellerAddress);\r\n\t\t_;\r\n\t}\r\n\t\r\n\tmodifier inProjectState(ProjectState _state) {\r\n\t\trequire(projectState == _state);\r\n\t\t_;\r\n\t}\r\n\r\n    function getBalance()\r\n        public\r\n        view\r\n        returns (uint256 balance)\r\n    {\r\n        return address(this).balance;\r\n    }\r\n} ",
  "sourcePath": "D:\\MSDN Projects\\CryptoChronos\\Truffle\\contracts\\Escrow.sol",
  "ast": {
    "absolutePath": "project:/contracts/Escrow.sol",
    "exportedSymbols": {
      "Address": [
        1890
      ],
      "Context": [
        1912
      ],
      "ERC165": [
        2139
      ],
      "ERC721": [
        935
      ],
      "IERC165": [
        2151
      ],
      "IERC721": [
        1051
      ],
      "IERC721Metadata": [
        1593
      ],
      "IERC721Receiver": [
        1069
      ],
      "NftEscrow": [
        3280
      ],
      "Strings": [
        2115
      ]
    },
    "id": 3281,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2866,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:24:17"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 2867,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3281,
        "sourceUnit": 936,
        "src": "65:57:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "id": 2868,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3281,
        "sourceUnit": 1070,
        "src": "124:66:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2869,
              "name": "IERC721Receiver",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1069,
              "src": "216:15:17"
            },
            "id": 2870,
            "nodeType": "InheritanceSpecifier",
            "src": "216:15:17"
          }
        ],
        "canonicalName": "NftEscrow",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3280,
        "linearizedBaseContracts": [
          3280,
          1069
        ],
        "name": "NftEscrow",
        "nameLocation": "203:9:17",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "NftEscrow.ProjectState",
            "id": 2878,
            "members": [
              {
                "id": 2871,
                "name": "newEscrow",
                "nameLocation": "265:9:17",
                "nodeType": "EnumValue",
                "src": "265:9:17"
              },
              {
                "id": 2872,
                "name": "nftDeposited",
                "nameLocation": "276:12:17",
                "nodeType": "EnumValue",
                "src": "276:12:17"
              },
              {
                "id": 2873,
                "name": "cancelNFT",
                "nameLocation": "290:9:17",
                "nodeType": "EnumValue",
                "src": "290:9:17"
              },
              {
                "id": 2874,
                "name": "ethDeposited",
                "nameLocation": "301:12:17",
                "nodeType": "EnumValue",
                "src": "301:12:17"
              },
              {
                "id": 2875,
                "name": "canceledBeforeDelivery",
                "nameLocation": "315:22:17",
                "nodeType": "EnumValue",
                "src": "315:22:17"
              },
              {
                "id": 2876,
                "name": "deliveryInitiated",
                "nameLocation": "339:17:17",
                "nodeType": "EnumValue",
                "src": "339:17:17"
              },
              {
                "id": 2877,
                "name": "delivered",
                "nameLocation": "358:9:17",
                "nodeType": "EnumValue",
                "src": "358:9:17"
              }
            ],
            "name": "ProjectState",
            "nameLocation": "250:12:17",
            "nodeType": "EnumDefinition",
            "src": "245:124:17"
          },
          {
            "constant": false,
            "functionSelector": "3d9b2ae6",
            "id": 2880,
            "mutability": "mutable",
            "name": "sellerAddress",
            "nameLocation": "404:13:17",
            "nodeType": "VariableDeclaration",
            "scope": 3280,
            "src": "381:36:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 2879,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "381:15:17",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "44834aca",
            "id": 2882,
            "mutability": "mutable",
            "name": "buyerAddress",
            "nameLocation": "447:12:17",
            "nodeType": "VariableDeclaration",
            "scope": 3280,
            "src": "424:35:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 2881,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "424:15:17",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5bf8633a",
            "id": 2884,
            "mutability": "mutable",
            "name": "nftAddress",
            "nameLocation": "481:10:17",
            "nodeType": "VariableDeclaration",
            "scope": 3280,
            "src": "466:25:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2883,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "466:7:17",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a5c42ef1",
            "id": 2886,
            "mutability": "mutable",
            "name": "tokenID",
            "nameLocation": "513:7:17",
            "nodeType": "VariableDeclaration",
            "scope": 3280,
            "src": "498:22:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2885,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "498:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2889,
            "mutability": "mutable",
            "name": "buyerCancel",
            "nameLocation": "541:11:17",
            "nodeType": "VariableDeclaration",
            "scope": 3280,
            "src": "527:33:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 2887,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "527:4:17",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 2888,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "555:5:17",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2892,
            "mutability": "mutable",
            "name": "sellerCancel",
            "nameLocation": "581:12:17",
            "nodeType": "VariableDeclaration",
            "scope": 3280,
            "src": "567:34:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 2890,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "567:4:17",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 2891,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "596:5:17",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "748807ab",
            "id": 2895,
            "mutability": "mutable",
            "name": "projectState",
            "nameLocation": "628:12:17",
            "nodeType": "VariableDeclaration",
            "scope": 3280,
            "src": "608:32:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_ProjectState_$2878",
              "typeString": "enum NftEscrow.ProjectState"
            },
            "typeName": {
              "id": 2894,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2893,
                "name": "ProjectState",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2878,
                "src": "608:12:17"
              },
              "referencedDeclaration": 2878,
              "src": "608:12:17",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_ProjectState_$2878",
                "typeString": "enum NftEscrow.ProjectState"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 2900,
            "name": "StateUpdated",
            "nameLocation": "655:12:17",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2899,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2898,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "state",
                  "nameLocation": "681:5:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2900,
                  "src": "668:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_ProjectState_$2878",
                    "typeString": "enum NftEscrow.ProjectState"
                  },
                  "typeName": {
                    "id": 2897,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2896,
                      "name": "ProjectState",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2878,
                      "src": "668:12:17"
                    },
                    "referencedDeclaration": 2878,
                    "src": "668:12:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$2878",
                      "typeString": "enum NftEscrow.ProjectState"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "667:20:17"
            },
            "src": "649:39:17"
          },
          {
            "body": {
              "id": 2934,
              "nodeType": "Block",
              "src": "747:188:17",
              "statements": [
                {
                  "expression": {
                    "id": 2912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2907,
                      "name": "sellerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2880,
                      "src": "758:13:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2910,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2902,
                          "src": "782:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "774:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 2908,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "774:8:17",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2911,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "774:15:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "758:31:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 2913,
                  "nodeType": "ExpressionStatement",
                  "src": "758:31:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2914,
                      "name": "buyer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2904,
                      "src": "803:5:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 2917,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "820:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 2916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "812:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2915,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "812:7:17",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2918,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "812:10:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "803:19:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2928,
                  "nodeType": "IfStatement",
                  "src": "800:80:17",
                  "trueBody": {
                    "id": 2927,
                    "nodeType": "Block",
                    "src": "824:56:17",
                    "statements": [
                      {
                        "expression": {
                          "id": 2925,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2920,
                            "name": "buyerAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2882,
                            "src": "839:12:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2923,
                                "name": "buyer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2904,
                                "src": "862:5:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2922,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "854:8:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 2921,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "854:8:17",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2924,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "854:14:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "839:29:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 2926,
                        "nodeType": "ExpressionStatement",
                        "src": "839:29:17"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 2932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2929,
                      "name": "projectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2895,
                      "src": "890:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$2878",
                        "typeString": "enum NftEscrow.ProjectState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2930,
                        "name": "ProjectState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2878,
                        "src": "905:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ProjectState_$2878_$",
                          "typeString": "type(enum NftEscrow.ProjectState)"
                        }
                      },
                      "id": 2931,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "newEscrow",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2871,
                      "src": "905:22:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$2878",
                        "typeString": "enum NftEscrow.ProjectState"
                      }
                    },
                    "src": "890:37:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$2878",
                      "typeString": "enum NftEscrow.ProjectState"
                    }
                  },
                  "id": 2933,
                  "nodeType": "ExpressionStatement",
                  "src": "890:37:17"
                }
              ]
            },
            "id": 2935,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2905,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2902,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "716:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2935,
                  "src": "708:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2901,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "708:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2904,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "732:5:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2935,
                  "src": "724:13:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2903,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "724:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "707:31:17"
            },
            "returnParameters": {
              "id": 2906,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "747:0:17"
            },
            "scope": 3280,
            "src": "696:239:17",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1068
            ],
            "body": {
              "id": 2953,
              "nodeType": "Block",
              "src": "1073:56:17",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "expression": {
                        "id": 2949,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967268,
                        "src": "1091:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NftEscrow_$3280",
                          "typeString": "contract NftEscrow"
                        }
                      },
                      "id": 2950,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "onERC721Received",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2954,
                      "src": "1091:21:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                        "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                      }
                    },
                    "id": 2951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "selector",
                    "nodeType": "MemberAccess",
                    "src": "1091:30:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 2948,
                  "id": 2952,
                  "nodeType": "Return",
                  "src": "1084:37:17"
                }
              ]
            },
            "functionSelector": "150b7a02",
            "id": 2954,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nameLocation": "952:16:17",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2945,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1047:8:17"
            },
            "parameters": {
              "id": 2944,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2937,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "977:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2954,
                  "src": "969:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2936,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "969:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2939,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "995:4:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2954,
                  "src": "987:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2938,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "987:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2941,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1009:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2954,
                  "src": "1001:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2940,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1001:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2943,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1033:4:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2954,
                  "src": "1018:19:17",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2942,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1018:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "968:71:17"
            },
            "returnParameters": {
              "id": 2948,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2947,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2954,
                  "src": "1065:6:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 2946,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1065:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1064:8:17"
            },
            "scope": 3280,
            "src": "943:186:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2997,
              "nodeType": "Block",
              "src": "1289:247:17",
              "statements": [
                {
                  "expression": {
                    "id": 2969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2967,
                      "name": "nftAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2884,
                      "src": "1300:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2968,
                      "name": "_NFTAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2956,
                      "src": "1313:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1300:24:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2970,
                  "nodeType": "ExpressionStatement",
                  "src": "1300:24:17"
                },
                {
                  "expression": {
                    "id": 2973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2971,
                      "name": "tokenID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2886,
                      "src": "1335:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2972,
                      "name": "_TokenID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2958,
                      "src": "1345:8:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1335:18:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2974,
                  "nodeType": "ExpressionStatement",
                  "src": "1335:18:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2979,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1400:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2980,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1400:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2983,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1420:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NftEscrow_$3280",
                              "typeString": "contract NftEscrow"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NftEscrow_$3280",
                              "typeString": "contract NftEscrow"
                            }
                          ],
                          "id": 2982,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1412:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2981,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1412:7:17",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1412:13:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2985,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2886,
                        "src": "1427:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2976,
                            "name": "nftAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2884,
                            "src": "1371:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2975,
                          "name": "ERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 935,
                          "src": "1364:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC721_$935_$",
                            "typeString": "type(contract ERC721)"
                          }
                        },
                        "id": 2977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1364:18:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$935",
                          "typeString": "contract ERC721"
                        }
                      },
                      "id": 2978,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 466,
                      "src": "1364:35:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 2986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1364:71:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2987,
                  "nodeType": "ExpressionStatement",
                  "src": "1364:71:17"
                },
                {
                  "expression": {
                    "id": 2991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2988,
                      "name": "projectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2895,
                      "src": "1446:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$2878",
                        "typeString": "enum NftEscrow.ProjectState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2989,
                        "name": "ProjectState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2878,
                        "src": "1461:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ProjectState_$2878_$",
                          "typeString": "type(enum NftEscrow.ProjectState)"
                        }
                      },
                      "id": 2990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "nftDeposited",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2872,
                      "src": "1461:25:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$2878",
                        "typeString": "enum NftEscrow.ProjectState"
                      }
                    },
                    "src": "1446:40:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$2878",
                      "typeString": "enum NftEscrow.ProjectState"
                    }
                  },
                  "id": 2992,
                  "nodeType": "ExpressionStatement",
                  "src": "1446:40:17"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2994,
                        "name": "projectState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2895,
                        "src": "1515:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ProjectState_$2878",
                          "typeString": "enum NftEscrow.ProjectState"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_ProjectState_$2878",
                          "typeString": "enum NftEscrow.ProjectState"
                        }
                      ],
                      "id": 2993,
                      "name": "StateUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2900,
                      "src": "1502:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_enum$_ProjectState_$2878_$returns$__$",
                        "typeString": "function (enum NftEscrow.ProjectState)"
                      }
                    },
                    "id": 2995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1502:26:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2996,
                  "nodeType": "EmitStatement",
                  "src": "1497:31:17"
                }
              ]
            },
            "functionSelector": "9b5b9b18",
            "id": 2998,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 2961,
                      "name": "ProjectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2878,
                      "src": "1240:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ProjectState_$2878_$",
                        "typeString": "type(enum NftEscrow.ProjectState)"
                      }
                    },
                    "id": 2962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "newEscrow",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2871,
                    "src": "1240:22:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$2878",
                      "typeString": "enum NftEscrow.ProjectState"
                    }
                  }
                ],
                "id": 2963,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2960,
                  "name": "inProjectState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3267,
                  "src": "1225:14:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "1225:38:17"
              },
              {
                "id": 2965,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2964,
                  "name": "onlySeller",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3213,
                  "src": "1273:10:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "1273:10:17"
              }
            ],
            "name": "depositNFT",
            "nameLocation": "1150:10:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2959,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2956,
                  "mutability": "mutable",
                  "name": "_NFTAddress",
                  "nameLocation": "1169:11:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2998,
                  "src": "1161:19:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2955,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1161:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2958,
                  "mutability": "mutable",
                  "name": "_TokenID",
                  "nameLocation": "1190:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2998,
                  "src": "1182:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2957,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1182:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1160:39:17"
            },
            "returnParameters": {
              "id": 2966,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1289:0:17"
            },
            "scope": 3280,
            "src": "1141:395:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3029,
              "nodeType": "Block",
              "src": "1663:180:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3013,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1718:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NftEscrow_$3280",
                              "typeString": "contract NftEscrow"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NftEscrow_$3280",
                              "typeString": "contract NftEscrow"
                            }
                          ],
                          "id": 3012,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1710:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3011,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1710:7:17",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3014,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1710:13:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3015,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1725:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1725:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3017,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2886,
                        "src": "1737:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3008,
                            "name": "nftAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2884,
                            "src": "1681:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3007,
                          "name": "ERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 935,
                          "src": "1674:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC721_$935_$",
                            "typeString": "type(contract ERC721)"
                          }
                        },
                        "id": 3009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1674:18:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$935",
                          "typeString": "contract ERC721"
                        }
                      },
                      "id": 3010,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 466,
                      "src": "1674:35:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 3018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1674:71:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3019,
                  "nodeType": "ExpressionStatement",
                  "src": "1674:71:17"
                },
                {
                  "expression": {
                    "id": 3023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3020,
                      "name": "projectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2895,
                      "src": "1756:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$2878",
                        "typeString": "enum NftEscrow.ProjectState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3021,
                        "name": "ProjectState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2878,
                        "src": "1771:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ProjectState_$2878_$",
                          "typeString": "type(enum NftEscrow.ProjectState)"
                        }
                      },
                      "id": 3022,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "cancelNFT",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2873,
                      "src": "1771:22:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$2878",
                        "typeString": "enum NftEscrow.ProjectState"
                      }
                    },
                    "src": "1756:37:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$2878",
                      "typeString": "enum NftEscrow.ProjectState"
                    }
                  },
                  "id": 3024,
                  "nodeType": "ExpressionStatement",
                  "src": "1756:37:17"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3026,
                        "name": "projectState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2895,
                        "src": "1822:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ProjectState_$2878",
                          "typeString": "enum NftEscrow.ProjectState"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_ProjectState_$2878",
                          "typeString": "enum NftEscrow.ProjectState"
                        }
                      ],
                      "id": 3025,
                      "name": "StateUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2900,
                      "src": "1809:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_enum$_ProjectState_$2878_$returns$__$",
                        "typeString": "function (enum NftEscrow.ProjectState)"
                      }
                    },
                    "id": 3027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1809:26:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3028,
                  "nodeType": "EmitStatement",
                  "src": "1804:31:17"
                }
              ]
            },
            "functionSelector": "2f9fa7f6",
            "id": 3030,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 3001,
                      "name": "ProjectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2878,
                      "src": "1611:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ProjectState_$2878_$",
                        "typeString": "type(enum NftEscrow.ProjectState)"
                      }
                    },
                    "id": 3002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "nftDeposited",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2872,
                    "src": "1611:25:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$2878",
                      "typeString": "enum NftEscrow.ProjectState"
                    }
                  }
                ],
                "id": 3003,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3000,
                  "name": "inProjectState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3267,
                  "src": "1596:14:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "1596:41:17"
              },
              {
                "id": 3005,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3004,
                  "name": "onlySeller",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3213,
                  "src": "1647:10:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "1647:10:17"
              }
            ],
            "name": "cancelAtNFT",
            "nameLocation": "1557:11:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2999,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1568:2:17"
            },
            "returnParameters": {
              "id": 3006,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1663:0:17"
            },
            "scope": 3280,
            "src": "1548:295:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3096,
              "nodeType": "Block",
              "src": "2008:502:17",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 3041,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2023:3:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3042,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2023:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 3043,
                      "name": "sellerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2880,
                      "src": "2037:13:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2023:27:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 3054,
                    "nodeType": "Block",
                    "src": "2113:47:17",
                    "statements": [
                      {
                        "expression": {
                          "id": 3052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3050,
                            "name": "buyerCancel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2889,
                            "src": "2128:11:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3051,
                            "name": "_state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3032,
                            "src": "2142:6:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2128:20:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3053,
                        "nodeType": "ExpressionStatement",
                        "src": "2128:20:17"
                      }
                    ]
                  },
                  "id": 3055,
                  "nodeType": "IfStatement",
                  "src": "2019:141:17",
                  "trueBody": {
                    "id": 3049,
                    "nodeType": "Block",
                    "src": "2051:48:17",
                    "statements": [
                      {
                        "expression": {
                          "id": 3047,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3045,
                            "name": "sellerCancel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2892,
                            "src": "2066:12:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3046,
                            "name": "_state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3032,
                            "src": "2081:6:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2066:21:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3048,
                        "nodeType": "ExpressionStatement",
                        "src": "2066:21:17"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 3062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 3058,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3056,
                        "name": "sellerCancel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2892,
                        "src": "2184:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "74727565",
                        "id": 3057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2200:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "src": "2184:20:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 3061,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3059,
                        "name": "buyerCancel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2889,
                        "src": "2208:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "74727565",
                        "id": 3060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2223:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "src": "2208:19:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2184:43:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3095,
                  "nodeType": "IfStatement",
                  "src": "2180:323:17",
                  "trueBody": {
                    "id": 3094,
                    "nodeType": "Block",
                    "src": "2228:275:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 3069,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "2287:4:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_NftEscrow_$3280",
                                    "typeString": "contract NftEscrow"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_NftEscrow_$3280",
                                    "typeString": "contract NftEscrow"
                                  }
                                ],
                                "id": 3068,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2279:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3067,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2279:7:17",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3070,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2279:13:17",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3071,
                              "name": "sellerAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2880,
                              "src": "2294:13:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 3072,
                              "name": "tokenID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2886,
                              "src": "2309:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 3064,
                                  "name": "nftAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2884,
                                  "src": "2250:10:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3063,
                                "name": "ERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 935,
                                "src": "2243:6:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC721_$935_$",
                                  "typeString": "type(contract ERC721)"
                                }
                              },
                              "id": 3065,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2243:18:17",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC721_$935",
                                "typeString": "contract ERC721"
                              }
                            },
                            "id": 3066,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 466,
                            "src": "2243:35:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) external"
                            }
                          },
                          "id": 3073,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2243:74:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3074,
                        "nodeType": "ExpressionStatement",
                        "src": "2243:74:17"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3080,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967268,
                                    "src": "2362:4:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_NftEscrow_$3280",
                                      "typeString": "contract NftEscrow"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_NftEscrow_$3280",
                                      "typeString": "contract NftEscrow"
                                    }
                                  ],
                                  "id": 3079,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2354:7:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 3078,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2354:7:17",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3081,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2354:13:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 3082,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "src": "2354:21:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 3075,
                              "name": "buyerAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2882,
                              "src": "2332:12:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 3077,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "2332:21:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 3083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2332:44:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3084,
                        "nodeType": "ExpressionStatement",
                        "src": "2332:44:17"
                      },
                      {
                        "expression": {
                          "id": 3088,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3085,
                            "name": "projectState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2895,
                            "src": "2391:12:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProjectState_$2878",
                              "typeString": "enum NftEscrow.ProjectState"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 3086,
                              "name": "ProjectState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2878,
                              "src": "2406:12:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ProjectState_$2878_$",
                                "typeString": "type(enum NftEscrow.ProjectState)"
                              }
                            },
                            "id": 3087,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "canceledBeforeDelivery",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2875,
                            "src": "2406:35:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProjectState_$2878",
                              "typeString": "enum NftEscrow.ProjectState"
                            }
                          },
                          "src": "2391:50:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ProjectState_$2878",
                            "typeString": "enum NftEscrow.ProjectState"
                          }
                        },
                        "id": 3089,
                        "nodeType": "ExpressionStatement",
                        "src": "2391:50:17"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 3091,
                              "name": "projectState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2895,
                              "src": "2478:12:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ProjectState_$2878",
                                "typeString": "enum NftEscrow.ProjectState"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_ProjectState_$2878",
                                "typeString": "enum NftEscrow.ProjectState"
                              }
                            ],
                            "id": 3090,
                            "name": "StateUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2900,
                            "src": "2465:12:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_enum$_ProjectState_$2878_$returns$__$",
                              "typeString": "function (enum NftEscrow.ProjectState)"
                            }
                          },
                          "id": 3092,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2465:26:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3093,
                        "nodeType": "EmitStatement",
                        "src": "2460:31:17"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "342901a7",
            "id": 3097,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 3035,
                      "name": "ProjectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2878,
                      "src": "1936:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ProjectState_$2878_$",
                        "typeString": "type(enum NftEscrow.ProjectState)"
                      }
                    },
                    "id": 3036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "ethDeposited",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2874,
                    "src": "1936:25:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$2878",
                      "typeString": "enum NftEscrow.ProjectState"
                    }
                  }
                ],
                "id": 3037,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3034,
                  "name": "inProjectState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3267,
                  "src": "1921:14:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "1921:41:17"
              },
              {
                "id": 3039,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3038,
                  "name": "BuyerOrSeller",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3254,
                  "src": "1989:13:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "1989:13:17"
              }
            ],
            "name": "cancelBeforeDelivery",
            "nameLocation": "1862:20:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3033,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3032,
                  "mutability": "mutable",
                  "name": "_state",
                  "nameLocation": "1888:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3097,
                  "src": "1883:11:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3031,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1883:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1882:13:17"
            },
            "returnParameters": {
              "id": 3040,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2008:0:17"
            },
            "scope": 3280,
            "src": "1853:657:17",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3129,
              "nodeType": "Block",
              "src": "2633:203:17",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3104,
                      "name": "buyerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2882,
                      "src": "2647:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 3107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2671:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 3106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2663:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 3105,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2663:7:17",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2663:10:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2647:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3119,
                  "nodeType": "IfStatement",
                  "src": "2644:92:17",
                  "trueBody": {
                    "id": 3118,
                    "nodeType": "Block",
                    "src": "2675:61:17",
                    "statements": [
                      {
                        "expression": {
                          "id": 3116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3110,
                            "name": "buyerAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2882,
                            "src": "2690:12:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 3113,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "2713:3:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 3114,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2713:10:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3112,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2705:8:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 3111,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2705:8:17",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3115,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2705:19:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "2690:34:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 3117,
                        "nodeType": "ExpressionStatement",
                        "src": "2690:34:17"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 3123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3120,
                      "name": "projectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2895,
                      "src": "2746:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$2878",
                        "typeString": "enum NftEscrow.ProjectState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3121,
                        "name": "ProjectState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2878,
                        "src": "2761:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ProjectState_$2878_$",
                          "typeString": "type(enum NftEscrow.ProjectState)"
                        }
                      },
                      "id": 3122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ethDeposited",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2874,
                      "src": "2761:25:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$2878",
                        "typeString": "enum NftEscrow.ProjectState"
                      }
                    },
                    "src": "2746:40:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$2878",
                      "typeString": "enum NftEscrow.ProjectState"
                    }
                  },
                  "id": 3124,
                  "nodeType": "ExpressionStatement",
                  "src": "2746:40:17"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3126,
                        "name": "projectState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2895,
                        "src": "2815:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ProjectState_$2878",
                          "typeString": "enum NftEscrow.ProjectState"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_ProjectState_$2878",
                          "typeString": "enum NftEscrow.ProjectState"
                        }
                      ],
                      "id": 3125,
                      "name": "StateUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2900,
                      "src": "2802:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_enum$_ProjectState_$2878_$returns$__$",
                        "typeString": "function (enum NftEscrow.ProjectState)"
                      }
                    },
                    "id": 3127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2802:26:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3128,
                  "nodeType": "EmitStatement",
                  "src": "2797:31:17"
                }
              ]
            },
            "functionSelector": "f6326fb3",
            "id": 3130,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 3100,
                      "name": "ProjectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2878,
                      "src": "2601:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ProjectState_$2878_$",
                        "typeString": "type(enum NftEscrow.ProjectState)"
                      }
                    },
                    "id": 3101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "nftDeposited",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2872,
                    "src": "2601:25:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$2878",
                      "typeString": "enum NftEscrow.ProjectState"
                    }
                  }
                ],
                "id": 3102,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3099,
                  "name": "inProjectState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3267,
                  "src": "2586:14:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "2586:41:17"
              }
            ],
            "name": "depositETH",
            "nameLocation": "2531:10:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3098,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2541:2:17"
            },
            "returnParameters": {
              "id": 3103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2633:0:17"
            },
            "scope": 3280,
            "src": "2522:314:17",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3150,
              "nodeType": "Block",
              "src": "2987:106:17",
              "statements": [
                {
                  "expression": {
                    "id": 3144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3141,
                      "name": "projectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2895,
                      "src": "2998:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$2878",
                        "typeString": "enum NftEscrow.ProjectState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3142,
                        "name": "ProjectState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2878,
                        "src": "3013:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ProjectState_$2878_$",
                          "typeString": "type(enum NftEscrow.ProjectState)"
                        }
                      },
                      "id": 3143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "deliveryInitiated",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2876,
                      "src": "3013:30:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$2878",
                        "typeString": "enum NftEscrow.ProjectState"
                      }
                    },
                    "src": "2998:45:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$2878",
                      "typeString": "enum NftEscrow.ProjectState"
                    }
                  },
                  "id": 3145,
                  "nodeType": "ExpressionStatement",
                  "src": "2998:45:17"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3147,
                        "name": "projectState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2895,
                        "src": "3072:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ProjectState_$2878",
                          "typeString": "enum NftEscrow.ProjectState"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_ProjectState_$2878",
                          "typeString": "enum NftEscrow.ProjectState"
                        }
                      ],
                      "id": 3146,
                      "name": "StateUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2900,
                      "src": "3059:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_enum$_ProjectState_$2878_$returns$__$",
                        "typeString": "function (enum NftEscrow.ProjectState)"
                      }
                    },
                    "id": 3148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3059:26:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3149,
                  "nodeType": "EmitStatement",
                  "src": "3054:31:17"
                }
              ]
            },
            "functionSelector": "a1ee4181",
            "id": 3151,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 3133,
                      "name": "ProjectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2878,
                      "src": "2916:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ProjectState_$2878_$",
                        "typeString": "type(enum NftEscrow.ProjectState)"
                      }
                    },
                    "id": 3134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "ethDeposited",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2874,
                    "src": "2916:25:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$2878",
                      "typeString": "enum NftEscrow.ProjectState"
                    }
                  }
                ],
                "id": 3135,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3132,
                  "name": "inProjectState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3267,
                  "src": "2901:14:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "2901:41:17"
              },
              {
                "id": 3137,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3136,
                  "name": "onlySeller",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3213,
                  "src": "2952:10:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "2952:10:17"
              },
              {
                "id": 3139,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3138,
                  "name": "noDispute",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3238,
                  "src": "2972:9:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "2972:9:17"
              }
            ],
            "name": "initiateDelivery",
            "nameLocation": "2857:16:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3131,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2873:2:17"
            },
            "returnParameters": {
              "id": 3140,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2987:0:17"
            },
            "scope": 3280,
            "src": "2848:245:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3191,
              "nodeType": "Block",
              "src": "3253:238:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3166,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3308:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NftEscrow_$3280",
                              "typeString": "contract NftEscrow"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NftEscrow_$3280",
                              "typeString": "contract NftEscrow"
                            }
                          ],
                          "id": 3165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3300:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3164,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3300:7:17",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3300:13:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3168,
                        "name": "buyerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2882,
                        "src": "3315:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 3169,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2886,
                        "src": "3329:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3161,
                            "name": "nftAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2884,
                            "src": "3271:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3160,
                          "name": "ERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 935,
                          "src": "3264:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC721_$935_$",
                            "typeString": "type(contract ERC721)"
                          }
                        },
                        "id": 3162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3264:18:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$935",
                          "typeString": "contract ERC721"
                        }
                      },
                      "id": 3163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 466,
                      "src": "3264:35:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 3170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3264:73:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3171,
                  "nodeType": "ExpressionStatement",
                  "src": "3264:73:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3177,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "3379:4:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_NftEscrow_$3280",
                                "typeString": "contract NftEscrow"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_NftEscrow_$3280",
                                "typeString": "contract NftEscrow"
                              }
                            ],
                            "id": 3176,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3371:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3175,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3371:7:17",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3371:13:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "3371:21:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3172,
                        "name": "sellerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2880,
                        "src": "3348:13:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 3174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "3348:22:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3348:45:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3181,
                  "nodeType": "ExpressionStatement",
                  "src": "3348:45:17"
                },
                {
                  "expression": {
                    "id": 3185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3182,
                      "name": "projectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2895,
                      "src": "3404:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$2878",
                        "typeString": "enum NftEscrow.ProjectState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3183,
                        "name": "ProjectState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2878,
                        "src": "3419:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ProjectState_$2878_$",
                          "typeString": "type(enum NftEscrow.ProjectState)"
                        }
                      },
                      "id": 3184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "delivered",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2877,
                      "src": "3419:22:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$2878",
                        "typeString": "enum NftEscrow.ProjectState"
                      }
                    },
                    "src": "3404:37:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$2878",
                      "typeString": "enum NftEscrow.ProjectState"
                    }
                  },
                  "id": 3186,
                  "nodeType": "ExpressionStatement",
                  "src": "3404:37:17"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3188,
                        "name": "projectState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2895,
                        "src": "3470:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ProjectState_$2878",
                          "typeString": "enum NftEscrow.ProjectState"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_ProjectState_$2878",
                          "typeString": "enum NftEscrow.ProjectState"
                        }
                      ],
                      "id": 3187,
                      "name": "StateUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2900,
                      "src": "3457:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_enum$_ProjectState_$2878_$returns$__$",
                        "typeString": "function (enum NftEscrow.ProjectState)"
                      }
                    },
                    "id": 3189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3457:26:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3190,
                  "nodeType": "EmitStatement",
                  "src": "3452:31:17"
                }
              ]
            },
            "functionSelector": "5e10177b",
            "id": 3192,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 3154,
                      "name": "ProjectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2878,
                      "src": "3197:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ProjectState_$2878_$",
                        "typeString": "type(enum NftEscrow.ProjectState)"
                      }
                    },
                    "id": 3155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "deliveryInitiated",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2876,
                    "src": "3197:30:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$2878",
                      "typeString": "enum NftEscrow.ProjectState"
                    }
                  }
                ],
                "id": 3156,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3153,
                  "name": "inProjectState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3267,
                  "src": "3182:14:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "3182:46:17"
              },
              {
                "id": 3158,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3157,
                  "name": "onlyBuyer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3224,
                  "src": "3238:9:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "3238:9:17"
              }
            ],
            "name": "confirmDelivery",
            "nameLocation": "3122:15:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3152,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3137:2:17"
            },
            "returnParameters": {
              "id": 3159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3253:0:17"
            },
            "scope": 3280,
            "src": "3113:378:17",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3201,
              "nodeType": "Block",
              "src": "3543:35:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3197,
                        "name": "_condition",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3194,
                        "src": "3556:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3196,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3548:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3548:19:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3199,
                  "nodeType": "ExpressionStatement",
                  "src": "3548:19:17"
                },
                {
                  "id": 3200,
                  "nodeType": "PlaceholderStatement",
                  "src": "3572:1:17"
                }
              ]
            },
            "id": 3202,
            "name": "condition",
            "nameLocation": "3516:9:17",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3194,
                  "mutability": "mutable",
                  "name": "_condition",
                  "nameLocation": "3531:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3202,
                  "src": "3526:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3193,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3526:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3525:17:17"
            },
            "src": "3507:71:17",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3212,
              "nodeType": "Block",
              "src": "3605:52:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3205,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3618:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3618:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3207,
                          "name": "sellerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2880,
                          "src": "3632:13:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "3618:27:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3204,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3610:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3610:36:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3210,
                  "nodeType": "ExpressionStatement",
                  "src": "3610:36:17"
                },
                {
                  "id": 3211,
                  "nodeType": "PlaceholderStatement",
                  "src": "3651:1:17"
                }
              ]
            },
            "id": 3213,
            "name": "onlySeller",
            "nameLocation": "3592:10:17",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3203,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3602:2:17"
            },
            "src": "3583:74:17",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3223,
              "nodeType": "Block",
              "src": "3683:51:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3216,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3696:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3696:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3218,
                          "name": "buyerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2882,
                          "src": "3710:12:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "3696:26:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3215,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3688:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3688:35:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3221,
                  "nodeType": "ExpressionStatement",
                  "src": "3688:35:17"
                },
                {
                  "id": 3222,
                  "nodeType": "PlaceholderStatement",
                  "src": "3728:1:17"
                }
              ]
            },
            "id": 3224,
            "name": "onlyBuyer",
            "nameLocation": "3671:9:17",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3214,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3680:2:17"
            },
            "src": "3662:72:17",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3237,
              "nodeType": "Block",
              "src": "3760:76:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 3229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3227,
                            "name": "buyerCancel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2889,
                            "src": "3776:11:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "66616c7365",
                            "id": 3228,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3791:5:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "3776:20:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 3232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3230,
                            "name": "sellerCancel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2892,
                            "src": "3800:12:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "66616c7365",
                            "id": 3231,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3816:5:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "3800:21:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3776:45:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3226,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3768:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3768:54:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3235,
                  "nodeType": "ExpressionStatement",
                  "src": "3768:54:17"
                },
                {
                  "id": 3236,
                  "nodeType": "PlaceholderStatement",
                  "src": "3830:1:17"
                }
              ]
            },
            "id": 3238,
            "name": "noDispute",
            "nameLocation": "3749:9:17",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3225,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3758:2:17"
            },
            "src": "3740:96:17",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3253,
              "nodeType": "Block",
              "src": "3867:82:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 3241,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3880:3:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3242,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3880:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 3243,
                            "name": "buyerAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2882,
                            "src": "3894:12:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "3880:26:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 3245,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3910:3:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3246,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3910:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 3247,
                            "name": "sellerAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2880,
                            "src": "3924:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "3910:27:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3880:57:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3240,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3872:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3872:66:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3251,
                  "nodeType": "ExpressionStatement",
                  "src": "3872:66:17"
                },
                {
                  "id": 3252,
                  "nodeType": "PlaceholderStatement",
                  "src": "3943:1:17"
                }
              ]
            },
            "id": 3254,
            "name": "BuyerOrSeller",
            "nameLocation": "3851:13:17",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3239,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3864:2:17"
            },
            "src": "3842:107:17",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3266,
              "nodeType": "Block",
              "src": "4000:47:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_ProjectState_$2878",
                          "typeString": "enum NftEscrow.ProjectState"
                        },
                        "id": 3262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3260,
                          "name": "projectState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2895,
                          "src": "4013:12:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ProjectState_$2878",
                            "typeString": "enum NftEscrow.ProjectState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3261,
                          "name": "_state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3257,
                          "src": "4029:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ProjectState_$2878",
                            "typeString": "enum NftEscrow.ProjectState"
                          }
                        },
                        "src": "4013:22:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3259,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4005:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4005:31:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3264,
                  "nodeType": "ExpressionStatement",
                  "src": "4005:31:17"
                },
                {
                  "id": 3265,
                  "nodeType": "PlaceholderStatement",
                  "src": "4041:1:17"
                }
              ]
            },
            "id": 3267,
            "name": "inProjectState",
            "nameLocation": "3964:14:17",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3257,
                  "mutability": "mutable",
                  "name": "_state",
                  "nameLocation": "3992:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3267,
                  "src": "3979:19:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_ProjectState_$2878",
                    "typeString": "enum NftEscrow.ProjectState"
                  },
                  "typeName": {
                    "id": 3256,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3255,
                      "name": "ProjectState",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2878,
                      "src": "3979:12:17"
                    },
                    "referencedDeclaration": 2878,
                    "src": "3979:12:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$2878",
                      "typeString": "enum NftEscrow.ProjectState"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3978:21:17"
            },
            "src": "3955:92:17",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3278,
              "nodeType": "Block",
              "src": "4147:47:17",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 3274,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "4173:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_NftEscrow_$3280",
                            "typeString": "contract NftEscrow"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_NftEscrow_$3280",
                            "typeString": "contract NftEscrow"
                          }
                        ],
                        "id": 3273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4165:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 3272,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4165:7:17",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4165:13:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "4165:21:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3271,
                  "id": 3277,
                  "nodeType": "Return",
                  "src": "4158:28:17"
                }
              ]
            },
            "functionSelector": "12065fe0",
            "id": 3279,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nameLocation": "4064:10:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3268,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4074:2:17"
            },
            "returnParameters": {
              "id": 3271,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3270,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "4133:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3279,
                  "src": "4125:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3269,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4125:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4124:17:17"
            },
            "scope": 3280,
            "src": "4055:139:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3281,
        "src": "194:4003:17",
        "usedErrors": []
      }
    ],
    "src": "37:4161:17"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Escrow.sol",
    "exportedSymbols": {
      "Address": [
        1890
      ],
      "Context": [
        1912
      ],
      "ERC165": [
        2139
      ],
      "ERC721": [
        935
      ],
      "IERC165": [
        2151
      ],
      "IERC721": [
        1051
      ],
      "IERC721Metadata": [
        1593
      ],
      "IERC721Receiver": [
        1069
      ],
      "NftEscrow": [
        3280
      ],
      "Strings": [
        2115
      ]
    },
    "id": 3281,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2866,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:24:17"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 2867,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3281,
        "sourceUnit": 936,
        "src": "65:57:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "id": 2868,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3281,
        "sourceUnit": 1070,
        "src": "124:66:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2869,
              "name": "IERC721Receiver",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1069,
              "src": "216:15:17"
            },
            "id": 2870,
            "nodeType": "InheritanceSpecifier",
            "src": "216:15:17"
          }
        ],
        "canonicalName": "NftEscrow",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3280,
        "linearizedBaseContracts": [
          3280,
          1069
        ],
        "name": "NftEscrow",
        "nameLocation": "203:9:17",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "NftEscrow.ProjectState",
            "id": 2878,
            "members": [
              {
                "id": 2871,
                "name": "newEscrow",
                "nameLocation": "265:9:17",
                "nodeType": "EnumValue",
                "src": "265:9:17"
              },
              {
                "id": 2872,
                "name": "nftDeposited",
                "nameLocation": "276:12:17",
                "nodeType": "EnumValue",
                "src": "276:12:17"
              },
              {
                "id": 2873,
                "name": "cancelNFT",
                "nameLocation": "290:9:17",
                "nodeType": "EnumValue",
                "src": "290:9:17"
              },
              {
                "id": 2874,
                "name": "ethDeposited",
                "nameLocation": "301:12:17",
                "nodeType": "EnumValue",
                "src": "301:12:17"
              },
              {
                "id": 2875,
                "name": "canceledBeforeDelivery",
                "nameLocation": "315:22:17",
                "nodeType": "EnumValue",
                "src": "315:22:17"
              },
              {
                "id": 2876,
                "name": "deliveryInitiated",
                "nameLocation": "339:17:17",
                "nodeType": "EnumValue",
                "src": "339:17:17"
              },
              {
                "id": 2877,
                "name": "delivered",
                "nameLocation": "358:9:17",
                "nodeType": "EnumValue",
                "src": "358:9:17"
              }
            ],
            "name": "ProjectState",
            "nameLocation": "250:12:17",
            "nodeType": "EnumDefinition",
            "src": "245:124:17"
          },
          {
            "constant": false,
            "functionSelector": "3d9b2ae6",
            "id": 2880,
            "mutability": "mutable",
            "name": "sellerAddress",
            "nameLocation": "404:13:17",
            "nodeType": "VariableDeclaration",
            "scope": 3280,
            "src": "381:36:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 2879,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "381:15:17",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "44834aca",
            "id": 2882,
            "mutability": "mutable",
            "name": "buyerAddress",
            "nameLocation": "447:12:17",
            "nodeType": "VariableDeclaration",
            "scope": 3280,
            "src": "424:35:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 2881,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "424:15:17",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5bf8633a",
            "id": 2884,
            "mutability": "mutable",
            "name": "nftAddress",
            "nameLocation": "481:10:17",
            "nodeType": "VariableDeclaration",
            "scope": 3280,
            "src": "466:25:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2883,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "466:7:17",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a5c42ef1",
            "id": 2886,
            "mutability": "mutable",
            "name": "tokenID",
            "nameLocation": "513:7:17",
            "nodeType": "VariableDeclaration",
            "scope": 3280,
            "src": "498:22:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2885,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "498:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2889,
            "mutability": "mutable",
            "name": "buyerCancel",
            "nameLocation": "541:11:17",
            "nodeType": "VariableDeclaration",
            "scope": 3280,
            "src": "527:33:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 2887,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "527:4:17",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 2888,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "555:5:17",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2892,
            "mutability": "mutable",
            "name": "sellerCancel",
            "nameLocation": "581:12:17",
            "nodeType": "VariableDeclaration",
            "scope": 3280,
            "src": "567:34:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 2890,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "567:4:17",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 2891,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "596:5:17",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "748807ab",
            "id": 2895,
            "mutability": "mutable",
            "name": "projectState",
            "nameLocation": "628:12:17",
            "nodeType": "VariableDeclaration",
            "scope": 3280,
            "src": "608:32:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_ProjectState_$2878",
              "typeString": "enum NftEscrow.ProjectState"
            },
            "typeName": {
              "id": 2894,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2893,
                "name": "ProjectState",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2878,
                "src": "608:12:17"
              },
              "referencedDeclaration": 2878,
              "src": "608:12:17",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_ProjectState_$2878",
                "typeString": "enum NftEscrow.ProjectState"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 2900,
            "name": "StateUpdated",
            "nameLocation": "655:12:17",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2899,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2898,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "state",
                  "nameLocation": "681:5:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2900,
                  "src": "668:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_ProjectState_$2878",
                    "typeString": "enum NftEscrow.ProjectState"
                  },
                  "typeName": {
                    "id": 2897,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2896,
                      "name": "ProjectState",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2878,
                      "src": "668:12:17"
                    },
                    "referencedDeclaration": 2878,
                    "src": "668:12:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$2878",
                      "typeString": "enum NftEscrow.ProjectState"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "667:20:17"
            },
            "src": "649:39:17"
          },
          {
            "body": {
              "id": 2934,
              "nodeType": "Block",
              "src": "747:188:17",
              "statements": [
                {
                  "expression": {
                    "id": 2912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2907,
                      "name": "sellerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2880,
                      "src": "758:13:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2910,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2902,
                          "src": "782:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "774:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 2908,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "774:8:17",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2911,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "774:15:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "758:31:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 2913,
                  "nodeType": "ExpressionStatement",
                  "src": "758:31:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2914,
                      "name": "buyer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2904,
                      "src": "803:5:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 2917,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "820:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 2916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "812:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2915,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "812:7:17",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2918,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "812:10:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "803:19:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2928,
                  "nodeType": "IfStatement",
                  "src": "800:80:17",
                  "trueBody": {
                    "id": 2927,
                    "nodeType": "Block",
                    "src": "824:56:17",
                    "statements": [
                      {
                        "expression": {
                          "id": 2925,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2920,
                            "name": "buyerAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2882,
                            "src": "839:12:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2923,
                                "name": "buyer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2904,
                                "src": "862:5:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2922,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "854:8:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 2921,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "854:8:17",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2924,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "854:14:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "839:29:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 2926,
                        "nodeType": "ExpressionStatement",
                        "src": "839:29:17"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 2932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2929,
                      "name": "projectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2895,
                      "src": "890:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$2878",
                        "typeString": "enum NftEscrow.ProjectState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2930,
                        "name": "ProjectState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2878,
                        "src": "905:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ProjectState_$2878_$",
                          "typeString": "type(enum NftEscrow.ProjectState)"
                        }
                      },
                      "id": 2931,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "newEscrow",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2871,
                      "src": "905:22:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$2878",
                        "typeString": "enum NftEscrow.ProjectState"
                      }
                    },
                    "src": "890:37:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$2878",
                      "typeString": "enum NftEscrow.ProjectState"
                    }
                  },
                  "id": 2933,
                  "nodeType": "ExpressionStatement",
                  "src": "890:37:17"
                }
              ]
            },
            "id": 2935,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2905,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2902,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "716:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2935,
                  "src": "708:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2901,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "708:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2904,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "732:5:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2935,
                  "src": "724:13:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2903,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "724:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "707:31:17"
            },
            "returnParameters": {
              "id": 2906,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "747:0:17"
            },
            "scope": 3280,
            "src": "696:239:17",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1068
            ],
            "body": {
              "id": 2953,
              "nodeType": "Block",
              "src": "1073:56:17",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "expression": {
                        "id": 2949,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967268,
                        "src": "1091:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NftEscrow_$3280",
                          "typeString": "contract NftEscrow"
                        }
                      },
                      "id": 2950,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "onERC721Received",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2954,
                      "src": "1091:21:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                        "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                      }
                    },
                    "id": 2951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "selector",
                    "nodeType": "MemberAccess",
                    "src": "1091:30:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 2948,
                  "id": 2952,
                  "nodeType": "Return",
                  "src": "1084:37:17"
                }
              ]
            },
            "functionSelector": "150b7a02",
            "id": 2954,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nameLocation": "952:16:17",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2945,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1047:8:17"
            },
            "parameters": {
              "id": 2944,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2937,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "977:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2954,
                  "src": "969:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2936,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "969:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2939,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "995:4:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2954,
                  "src": "987:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2938,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "987:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2941,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1009:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2954,
                  "src": "1001:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2940,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1001:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2943,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1033:4:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2954,
                  "src": "1018:19:17",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2942,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1018:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "968:71:17"
            },
            "returnParameters": {
              "id": 2948,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2947,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2954,
                  "src": "1065:6:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 2946,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1065:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1064:8:17"
            },
            "scope": 3280,
            "src": "943:186:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2997,
              "nodeType": "Block",
              "src": "1289:247:17",
              "statements": [
                {
                  "expression": {
                    "id": 2969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2967,
                      "name": "nftAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2884,
                      "src": "1300:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2968,
                      "name": "_NFTAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2956,
                      "src": "1313:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1300:24:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2970,
                  "nodeType": "ExpressionStatement",
                  "src": "1300:24:17"
                },
                {
                  "expression": {
                    "id": 2973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2971,
                      "name": "tokenID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2886,
                      "src": "1335:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2972,
                      "name": "_TokenID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2958,
                      "src": "1345:8:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1335:18:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2974,
                  "nodeType": "ExpressionStatement",
                  "src": "1335:18:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2979,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1400:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2980,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1400:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2983,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1420:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NftEscrow_$3280",
                              "typeString": "contract NftEscrow"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NftEscrow_$3280",
                              "typeString": "contract NftEscrow"
                            }
                          ],
                          "id": 2982,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1412:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2981,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1412:7:17",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1412:13:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2985,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2886,
                        "src": "1427:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2976,
                            "name": "nftAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2884,
                            "src": "1371:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2975,
                          "name": "ERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 935,
                          "src": "1364:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC721_$935_$",
                            "typeString": "type(contract ERC721)"
                          }
                        },
                        "id": 2977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1364:18:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$935",
                          "typeString": "contract ERC721"
                        }
                      },
                      "id": 2978,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 466,
                      "src": "1364:35:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 2986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1364:71:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2987,
                  "nodeType": "ExpressionStatement",
                  "src": "1364:71:17"
                },
                {
                  "expression": {
                    "id": 2991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2988,
                      "name": "projectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2895,
                      "src": "1446:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$2878",
                        "typeString": "enum NftEscrow.ProjectState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2989,
                        "name": "ProjectState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2878,
                        "src": "1461:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ProjectState_$2878_$",
                          "typeString": "type(enum NftEscrow.ProjectState)"
                        }
                      },
                      "id": 2990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "nftDeposited",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2872,
                      "src": "1461:25:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$2878",
                        "typeString": "enum NftEscrow.ProjectState"
                      }
                    },
                    "src": "1446:40:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$2878",
                      "typeString": "enum NftEscrow.ProjectState"
                    }
                  },
                  "id": 2992,
                  "nodeType": "ExpressionStatement",
                  "src": "1446:40:17"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2994,
                        "name": "projectState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2895,
                        "src": "1515:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ProjectState_$2878",
                          "typeString": "enum NftEscrow.ProjectState"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_ProjectState_$2878",
                          "typeString": "enum NftEscrow.ProjectState"
                        }
                      ],
                      "id": 2993,
                      "name": "StateUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2900,
                      "src": "1502:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_enum$_ProjectState_$2878_$returns$__$",
                        "typeString": "function (enum NftEscrow.ProjectState)"
                      }
                    },
                    "id": 2995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1502:26:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2996,
                  "nodeType": "EmitStatement",
                  "src": "1497:31:17"
                }
              ]
            },
            "functionSelector": "9b5b9b18",
            "id": 2998,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 2961,
                      "name": "ProjectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2878,
                      "src": "1240:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ProjectState_$2878_$",
                        "typeString": "type(enum NftEscrow.ProjectState)"
                      }
                    },
                    "id": 2962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "newEscrow",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2871,
                    "src": "1240:22:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$2878",
                      "typeString": "enum NftEscrow.ProjectState"
                    }
                  }
                ],
                "id": 2963,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2960,
                  "name": "inProjectState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3267,
                  "src": "1225:14:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "1225:38:17"
              },
              {
                "id": 2965,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2964,
                  "name": "onlySeller",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3213,
                  "src": "1273:10:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "1273:10:17"
              }
            ],
            "name": "depositNFT",
            "nameLocation": "1150:10:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2959,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2956,
                  "mutability": "mutable",
                  "name": "_NFTAddress",
                  "nameLocation": "1169:11:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2998,
                  "src": "1161:19:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2955,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1161:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2958,
                  "mutability": "mutable",
                  "name": "_TokenID",
                  "nameLocation": "1190:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2998,
                  "src": "1182:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2957,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1182:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1160:39:17"
            },
            "returnParameters": {
              "id": 2966,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1289:0:17"
            },
            "scope": 3280,
            "src": "1141:395:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3029,
              "nodeType": "Block",
              "src": "1663:180:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3013,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1718:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NftEscrow_$3280",
                              "typeString": "contract NftEscrow"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NftEscrow_$3280",
                              "typeString": "contract NftEscrow"
                            }
                          ],
                          "id": 3012,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1710:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3011,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1710:7:17",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3014,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1710:13:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3015,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1725:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1725:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3017,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2886,
                        "src": "1737:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3008,
                            "name": "nftAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2884,
                            "src": "1681:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3007,
                          "name": "ERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 935,
                          "src": "1674:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC721_$935_$",
                            "typeString": "type(contract ERC721)"
                          }
                        },
                        "id": 3009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1674:18:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$935",
                          "typeString": "contract ERC721"
                        }
                      },
                      "id": 3010,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 466,
                      "src": "1674:35:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 3018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1674:71:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3019,
                  "nodeType": "ExpressionStatement",
                  "src": "1674:71:17"
                },
                {
                  "expression": {
                    "id": 3023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3020,
                      "name": "projectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2895,
                      "src": "1756:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$2878",
                        "typeString": "enum NftEscrow.ProjectState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3021,
                        "name": "ProjectState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2878,
                        "src": "1771:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ProjectState_$2878_$",
                          "typeString": "type(enum NftEscrow.ProjectState)"
                        }
                      },
                      "id": 3022,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "cancelNFT",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2873,
                      "src": "1771:22:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$2878",
                        "typeString": "enum NftEscrow.ProjectState"
                      }
                    },
                    "src": "1756:37:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$2878",
                      "typeString": "enum NftEscrow.ProjectState"
                    }
                  },
                  "id": 3024,
                  "nodeType": "ExpressionStatement",
                  "src": "1756:37:17"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3026,
                        "name": "projectState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2895,
                        "src": "1822:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ProjectState_$2878",
                          "typeString": "enum NftEscrow.ProjectState"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_ProjectState_$2878",
                          "typeString": "enum NftEscrow.ProjectState"
                        }
                      ],
                      "id": 3025,
                      "name": "StateUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2900,
                      "src": "1809:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_enum$_ProjectState_$2878_$returns$__$",
                        "typeString": "function (enum NftEscrow.ProjectState)"
                      }
                    },
                    "id": 3027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1809:26:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3028,
                  "nodeType": "EmitStatement",
                  "src": "1804:31:17"
                }
              ]
            },
            "functionSelector": "2f9fa7f6",
            "id": 3030,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 3001,
                      "name": "ProjectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2878,
                      "src": "1611:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ProjectState_$2878_$",
                        "typeString": "type(enum NftEscrow.ProjectState)"
                      }
                    },
                    "id": 3002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "nftDeposited",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2872,
                    "src": "1611:25:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$2878",
                      "typeString": "enum NftEscrow.ProjectState"
                    }
                  }
                ],
                "id": 3003,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3000,
                  "name": "inProjectState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3267,
                  "src": "1596:14:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "1596:41:17"
              },
              {
                "id": 3005,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3004,
                  "name": "onlySeller",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3213,
                  "src": "1647:10:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "1647:10:17"
              }
            ],
            "name": "cancelAtNFT",
            "nameLocation": "1557:11:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2999,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1568:2:17"
            },
            "returnParameters": {
              "id": 3006,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1663:0:17"
            },
            "scope": 3280,
            "src": "1548:295:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3096,
              "nodeType": "Block",
              "src": "2008:502:17",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 3041,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2023:3:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3042,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2023:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 3043,
                      "name": "sellerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2880,
                      "src": "2037:13:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2023:27:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 3054,
                    "nodeType": "Block",
                    "src": "2113:47:17",
                    "statements": [
                      {
                        "expression": {
                          "id": 3052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3050,
                            "name": "buyerCancel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2889,
                            "src": "2128:11:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3051,
                            "name": "_state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3032,
                            "src": "2142:6:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2128:20:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3053,
                        "nodeType": "ExpressionStatement",
                        "src": "2128:20:17"
                      }
                    ]
                  },
                  "id": 3055,
                  "nodeType": "IfStatement",
                  "src": "2019:141:17",
                  "trueBody": {
                    "id": 3049,
                    "nodeType": "Block",
                    "src": "2051:48:17",
                    "statements": [
                      {
                        "expression": {
                          "id": 3047,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3045,
                            "name": "sellerCancel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2892,
                            "src": "2066:12:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3046,
                            "name": "_state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3032,
                            "src": "2081:6:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2066:21:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3048,
                        "nodeType": "ExpressionStatement",
                        "src": "2066:21:17"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 3062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 3058,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3056,
                        "name": "sellerCancel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2892,
                        "src": "2184:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "74727565",
                        "id": 3057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2200:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "src": "2184:20:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 3061,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3059,
                        "name": "buyerCancel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2889,
                        "src": "2208:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "74727565",
                        "id": 3060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2223:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "src": "2208:19:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2184:43:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3095,
                  "nodeType": "IfStatement",
                  "src": "2180:323:17",
                  "trueBody": {
                    "id": 3094,
                    "nodeType": "Block",
                    "src": "2228:275:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 3069,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "2287:4:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_NftEscrow_$3280",
                                    "typeString": "contract NftEscrow"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_NftEscrow_$3280",
                                    "typeString": "contract NftEscrow"
                                  }
                                ],
                                "id": 3068,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2279:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3067,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2279:7:17",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3070,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2279:13:17",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3071,
                              "name": "sellerAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2880,
                              "src": "2294:13:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 3072,
                              "name": "tokenID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2886,
                              "src": "2309:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 3064,
                                  "name": "nftAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2884,
                                  "src": "2250:10:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3063,
                                "name": "ERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 935,
                                "src": "2243:6:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC721_$935_$",
                                  "typeString": "type(contract ERC721)"
                                }
                              },
                              "id": 3065,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2243:18:17",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC721_$935",
                                "typeString": "contract ERC721"
                              }
                            },
                            "id": 3066,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 466,
                            "src": "2243:35:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) external"
                            }
                          },
                          "id": 3073,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2243:74:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3074,
                        "nodeType": "ExpressionStatement",
                        "src": "2243:74:17"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3080,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967268,
                                    "src": "2362:4:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_NftEscrow_$3280",
                                      "typeString": "contract NftEscrow"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_NftEscrow_$3280",
                                      "typeString": "contract NftEscrow"
                                    }
                                  ],
                                  "id": 3079,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2354:7:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 3078,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2354:7:17",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3081,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2354:13:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 3082,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "src": "2354:21:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 3075,
                              "name": "buyerAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2882,
                              "src": "2332:12:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 3077,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "2332:21:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 3083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2332:44:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3084,
                        "nodeType": "ExpressionStatement",
                        "src": "2332:44:17"
                      },
                      {
                        "expression": {
                          "id": 3088,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3085,
                            "name": "projectState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2895,
                            "src": "2391:12:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProjectState_$2878",
                              "typeString": "enum NftEscrow.ProjectState"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 3086,
                              "name": "ProjectState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2878,
                              "src": "2406:12:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ProjectState_$2878_$",
                                "typeString": "type(enum NftEscrow.ProjectState)"
                              }
                            },
                            "id": 3087,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "canceledBeforeDelivery",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2875,
                            "src": "2406:35:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProjectState_$2878",
                              "typeString": "enum NftEscrow.ProjectState"
                            }
                          },
                          "src": "2391:50:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ProjectState_$2878",
                            "typeString": "enum NftEscrow.ProjectState"
                          }
                        },
                        "id": 3089,
                        "nodeType": "ExpressionStatement",
                        "src": "2391:50:17"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 3091,
                              "name": "projectState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2895,
                              "src": "2478:12:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ProjectState_$2878",
                                "typeString": "enum NftEscrow.ProjectState"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_ProjectState_$2878",
                                "typeString": "enum NftEscrow.ProjectState"
                              }
                            ],
                            "id": 3090,
                            "name": "StateUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2900,
                            "src": "2465:12:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_enum$_ProjectState_$2878_$returns$__$",
                              "typeString": "function (enum NftEscrow.ProjectState)"
                            }
                          },
                          "id": 3092,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2465:26:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3093,
                        "nodeType": "EmitStatement",
                        "src": "2460:31:17"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "342901a7",
            "id": 3097,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 3035,
                      "name": "ProjectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2878,
                      "src": "1936:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ProjectState_$2878_$",
                        "typeString": "type(enum NftEscrow.ProjectState)"
                      }
                    },
                    "id": 3036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "ethDeposited",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2874,
                    "src": "1936:25:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$2878",
                      "typeString": "enum NftEscrow.ProjectState"
                    }
                  }
                ],
                "id": 3037,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3034,
                  "name": "inProjectState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3267,
                  "src": "1921:14:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "1921:41:17"
              },
              {
                "id": 3039,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3038,
                  "name": "BuyerOrSeller",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3254,
                  "src": "1989:13:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "1989:13:17"
              }
            ],
            "name": "cancelBeforeDelivery",
            "nameLocation": "1862:20:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3033,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3032,
                  "mutability": "mutable",
                  "name": "_state",
                  "nameLocation": "1888:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3097,
                  "src": "1883:11:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3031,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1883:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1882:13:17"
            },
            "returnParameters": {
              "id": 3040,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2008:0:17"
            },
            "scope": 3280,
            "src": "1853:657:17",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3129,
              "nodeType": "Block",
              "src": "2633:203:17",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3104,
                      "name": "buyerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2882,
                      "src": "2647:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 3107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2671:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 3106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2663:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 3105,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2663:7:17",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2663:10:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2647:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3119,
                  "nodeType": "IfStatement",
                  "src": "2644:92:17",
                  "trueBody": {
                    "id": 3118,
                    "nodeType": "Block",
                    "src": "2675:61:17",
                    "statements": [
                      {
                        "expression": {
                          "id": 3116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3110,
                            "name": "buyerAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2882,
                            "src": "2690:12:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 3113,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "2713:3:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 3114,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2713:10:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3112,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2705:8:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 3111,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2705:8:17",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3115,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2705:19:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "2690:34:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 3117,
                        "nodeType": "ExpressionStatement",
                        "src": "2690:34:17"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 3123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3120,
                      "name": "projectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2895,
                      "src": "2746:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$2878",
                        "typeString": "enum NftEscrow.ProjectState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3121,
                        "name": "ProjectState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2878,
                        "src": "2761:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ProjectState_$2878_$",
                          "typeString": "type(enum NftEscrow.ProjectState)"
                        }
                      },
                      "id": 3122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ethDeposited",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2874,
                      "src": "2761:25:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$2878",
                        "typeString": "enum NftEscrow.ProjectState"
                      }
                    },
                    "src": "2746:40:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$2878",
                      "typeString": "enum NftEscrow.ProjectState"
                    }
                  },
                  "id": 3124,
                  "nodeType": "ExpressionStatement",
                  "src": "2746:40:17"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3126,
                        "name": "projectState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2895,
                        "src": "2815:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ProjectState_$2878",
                          "typeString": "enum NftEscrow.ProjectState"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_ProjectState_$2878",
                          "typeString": "enum NftEscrow.ProjectState"
                        }
                      ],
                      "id": 3125,
                      "name": "StateUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2900,
                      "src": "2802:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_enum$_ProjectState_$2878_$returns$__$",
                        "typeString": "function (enum NftEscrow.ProjectState)"
                      }
                    },
                    "id": 3127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2802:26:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3128,
                  "nodeType": "EmitStatement",
                  "src": "2797:31:17"
                }
              ]
            },
            "functionSelector": "f6326fb3",
            "id": 3130,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 3100,
                      "name": "ProjectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2878,
                      "src": "2601:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ProjectState_$2878_$",
                        "typeString": "type(enum NftEscrow.ProjectState)"
                      }
                    },
                    "id": 3101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "nftDeposited",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2872,
                    "src": "2601:25:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$2878",
                      "typeString": "enum NftEscrow.ProjectState"
                    }
                  }
                ],
                "id": 3102,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3099,
                  "name": "inProjectState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3267,
                  "src": "2586:14:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "2586:41:17"
              }
            ],
            "name": "depositETH",
            "nameLocation": "2531:10:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3098,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2541:2:17"
            },
            "returnParameters": {
              "id": 3103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2633:0:17"
            },
            "scope": 3280,
            "src": "2522:314:17",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3150,
              "nodeType": "Block",
              "src": "2987:106:17",
              "statements": [
                {
                  "expression": {
                    "id": 3144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3141,
                      "name": "projectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2895,
                      "src": "2998:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$2878",
                        "typeString": "enum NftEscrow.ProjectState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3142,
                        "name": "ProjectState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2878,
                        "src": "3013:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ProjectState_$2878_$",
                          "typeString": "type(enum NftEscrow.ProjectState)"
                        }
                      },
                      "id": 3143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "deliveryInitiated",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2876,
                      "src": "3013:30:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$2878",
                        "typeString": "enum NftEscrow.ProjectState"
                      }
                    },
                    "src": "2998:45:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$2878",
                      "typeString": "enum NftEscrow.ProjectState"
                    }
                  },
                  "id": 3145,
                  "nodeType": "ExpressionStatement",
                  "src": "2998:45:17"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3147,
                        "name": "projectState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2895,
                        "src": "3072:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ProjectState_$2878",
                          "typeString": "enum NftEscrow.ProjectState"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_ProjectState_$2878",
                          "typeString": "enum NftEscrow.ProjectState"
                        }
                      ],
                      "id": 3146,
                      "name": "StateUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2900,
                      "src": "3059:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_enum$_ProjectState_$2878_$returns$__$",
                        "typeString": "function (enum NftEscrow.ProjectState)"
                      }
                    },
                    "id": 3148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3059:26:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3149,
                  "nodeType": "EmitStatement",
                  "src": "3054:31:17"
                }
              ]
            },
            "functionSelector": "a1ee4181",
            "id": 3151,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 3133,
                      "name": "ProjectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2878,
                      "src": "2916:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ProjectState_$2878_$",
                        "typeString": "type(enum NftEscrow.ProjectState)"
                      }
                    },
                    "id": 3134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "ethDeposited",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2874,
                    "src": "2916:25:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$2878",
                      "typeString": "enum NftEscrow.ProjectState"
                    }
                  }
                ],
                "id": 3135,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3132,
                  "name": "inProjectState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3267,
                  "src": "2901:14:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "2901:41:17"
              },
              {
                "id": 3137,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3136,
                  "name": "onlySeller",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3213,
                  "src": "2952:10:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "2952:10:17"
              },
              {
                "id": 3139,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3138,
                  "name": "noDispute",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3238,
                  "src": "2972:9:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "2972:9:17"
              }
            ],
            "name": "initiateDelivery",
            "nameLocation": "2857:16:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3131,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2873:2:17"
            },
            "returnParameters": {
              "id": 3140,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2987:0:17"
            },
            "scope": 3280,
            "src": "2848:245:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3191,
              "nodeType": "Block",
              "src": "3253:238:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3166,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3308:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NftEscrow_$3280",
                              "typeString": "contract NftEscrow"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NftEscrow_$3280",
                              "typeString": "contract NftEscrow"
                            }
                          ],
                          "id": 3165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3300:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3164,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3300:7:17",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3300:13:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3168,
                        "name": "buyerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2882,
                        "src": "3315:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 3169,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2886,
                        "src": "3329:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3161,
                            "name": "nftAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2884,
                            "src": "3271:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3160,
                          "name": "ERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 935,
                          "src": "3264:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC721_$935_$",
                            "typeString": "type(contract ERC721)"
                          }
                        },
                        "id": 3162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3264:18:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$935",
                          "typeString": "contract ERC721"
                        }
                      },
                      "id": 3163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 466,
                      "src": "3264:35:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 3170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3264:73:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3171,
                  "nodeType": "ExpressionStatement",
                  "src": "3264:73:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3177,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "3379:4:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_NftEscrow_$3280",
                                "typeString": "contract NftEscrow"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_NftEscrow_$3280",
                                "typeString": "contract NftEscrow"
                              }
                            ],
                            "id": 3176,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3371:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3175,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3371:7:17",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3371:13:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "3371:21:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3172,
                        "name": "sellerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2880,
                        "src": "3348:13:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 3174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "3348:22:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3348:45:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3181,
                  "nodeType": "ExpressionStatement",
                  "src": "3348:45:17"
                },
                {
                  "expression": {
                    "id": 3185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3182,
                      "name": "projectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2895,
                      "src": "3404:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$2878",
                        "typeString": "enum NftEscrow.ProjectState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3183,
                        "name": "ProjectState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2878,
                        "src": "3419:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ProjectState_$2878_$",
                          "typeString": "type(enum NftEscrow.ProjectState)"
                        }
                      },
                      "id": 3184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "delivered",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2877,
                      "src": "3419:22:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$2878",
                        "typeString": "enum NftEscrow.ProjectState"
                      }
                    },
                    "src": "3404:37:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$2878",
                      "typeString": "enum NftEscrow.ProjectState"
                    }
                  },
                  "id": 3186,
                  "nodeType": "ExpressionStatement",
                  "src": "3404:37:17"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3188,
                        "name": "projectState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2895,
                        "src": "3470:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ProjectState_$2878",
                          "typeString": "enum NftEscrow.ProjectState"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_ProjectState_$2878",
                          "typeString": "enum NftEscrow.ProjectState"
                        }
                      ],
                      "id": 3187,
                      "name": "StateUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2900,
                      "src": "3457:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_enum$_ProjectState_$2878_$returns$__$",
                        "typeString": "function (enum NftEscrow.ProjectState)"
                      }
                    },
                    "id": 3189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3457:26:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3190,
                  "nodeType": "EmitStatement",
                  "src": "3452:31:17"
                }
              ]
            },
            "functionSelector": "5e10177b",
            "id": 3192,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 3154,
                      "name": "ProjectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2878,
                      "src": "3197:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ProjectState_$2878_$",
                        "typeString": "type(enum NftEscrow.ProjectState)"
                      }
                    },
                    "id": 3155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "deliveryInitiated",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2876,
                    "src": "3197:30:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$2878",
                      "typeString": "enum NftEscrow.ProjectState"
                    }
                  }
                ],
                "id": 3156,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3153,
                  "name": "inProjectState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3267,
                  "src": "3182:14:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "3182:46:17"
              },
              {
                "id": 3158,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3157,
                  "name": "onlyBuyer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3224,
                  "src": "3238:9:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "3238:9:17"
              }
            ],
            "name": "confirmDelivery",
            "nameLocation": "3122:15:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3152,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3137:2:17"
            },
            "returnParameters": {
              "id": 3159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3253:0:17"
            },
            "scope": 3280,
            "src": "3113:378:17",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3201,
              "nodeType": "Block",
              "src": "3543:35:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3197,
                        "name": "_condition",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3194,
                        "src": "3556:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3196,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3548:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3548:19:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3199,
                  "nodeType": "ExpressionStatement",
                  "src": "3548:19:17"
                },
                {
                  "id": 3200,
                  "nodeType": "PlaceholderStatement",
                  "src": "3572:1:17"
                }
              ]
            },
            "id": 3202,
            "name": "condition",
            "nameLocation": "3516:9:17",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3194,
                  "mutability": "mutable",
                  "name": "_condition",
                  "nameLocation": "3531:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3202,
                  "src": "3526:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3193,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3526:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3525:17:17"
            },
            "src": "3507:71:17",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3212,
              "nodeType": "Block",
              "src": "3605:52:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3205,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3618:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3618:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3207,
                          "name": "sellerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2880,
                          "src": "3632:13:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "3618:27:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3204,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3610:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3610:36:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3210,
                  "nodeType": "ExpressionStatement",
                  "src": "3610:36:17"
                },
                {
                  "id": 3211,
                  "nodeType": "PlaceholderStatement",
                  "src": "3651:1:17"
                }
              ]
            },
            "id": 3213,
            "name": "onlySeller",
            "nameLocation": "3592:10:17",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3203,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3602:2:17"
            },
            "src": "3583:74:17",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3223,
              "nodeType": "Block",
              "src": "3683:51:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3216,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3696:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3696:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3218,
                          "name": "buyerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2882,
                          "src": "3710:12:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "3696:26:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3215,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3688:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3688:35:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3221,
                  "nodeType": "ExpressionStatement",
                  "src": "3688:35:17"
                },
                {
                  "id": 3222,
                  "nodeType": "PlaceholderStatement",
                  "src": "3728:1:17"
                }
              ]
            },
            "id": 3224,
            "name": "onlyBuyer",
            "nameLocation": "3671:9:17",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3214,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3680:2:17"
            },
            "src": "3662:72:17",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3237,
              "nodeType": "Block",
              "src": "3760:76:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 3229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3227,
                            "name": "buyerCancel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2889,
                            "src": "3776:11:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "66616c7365",
                            "id": 3228,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3791:5:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "3776:20:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 3232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3230,
                            "name": "sellerCancel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2892,
                            "src": "3800:12:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "66616c7365",
                            "id": 3231,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3816:5:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "3800:21:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3776:45:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3226,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3768:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3768:54:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3235,
                  "nodeType": "ExpressionStatement",
                  "src": "3768:54:17"
                },
                {
                  "id": 3236,
                  "nodeType": "PlaceholderStatement",
                  "src": "3830:1:17"
                }
              ]
            },
            "id": 3238,
            "name": "noDispute",
            "nameLocation": "3749:9:17",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3225,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3758:2:17"
            },
            "src": "3740:96:17",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3253,
              "nodeType": "Block",
              "src": "3867:82:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 3241,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3880:3:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3242,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3880:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 3243,
                            "name": "buyerAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2882,
                            "src": "3894:12:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "3880:26:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 3245,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3910:3:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3246,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3910:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 3247,
                            "name": "sellerAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2880,
                            "src": "3924:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "3910:27:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3880:57:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3240,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3872:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3872:66:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3251,
                  "nodeType": "ExpressionStatement",
                  "src": "3872:66:17"
                },
                {
                  "id": 3252,
                  "nodeType": "PlaceholderStatement",
                  "src": "3943:1:17"
                }
              ]
            },
            "id": 3254,
            "name": "BuyerOrSeller",
            "nameLocation": "3851:13:17",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3239,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3864:2:17"
            },
            "src": "3842:107:17",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3266,
              "nodeType": "Block",
              "src": "4000:47:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_ProjectState_$2878",
                          "typeString": "enum NftEscrow.ProjectState"
                        },
                        "id": 3262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3260,
                          "name": "projectState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2895,
                          "src": "4013:12:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ProjectState_$2878",
                            "typeString": "enum NftEscrow.ProjectState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3261,
                          "name": "_state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3257,
                          "src": "4029:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ProjectState_$2878",
                            "typeString": "enum NftEscrow.ProjectState"
                          }
                        },
                        "src": "4013:22:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3259,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4005:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4005:31:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3264,
                  "nodeType": "ExpressionStatement",
                  "src": "4005:31:17"
                },
                {
                  "id": 3265,
                  "nodeType": "PlaceholderStatement",
                  "src": "4041:1:17"
                }
              ]
            },
            "id": 3267,
            "name": "inProjectState",
            "nameLocation": "3964:14:17",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3257,
                  "mutability": "mutable",
                  "name": "_state",
                  "nameLocation": "3992:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3267,
                  "src": "3979:19:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_ProjectState_$2878",
                    "typeString": "enum NftEscrow.ProjectState"
                  },
                  "typeName": {
                    "id": 3256,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3255,
                      "name": "ProjectState",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2878,
                      "src": "3979:12:17"
                    },
                    "referencedDeclaration": 2878,
                    "src": "3979:12:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$2878",
                      "typeString": "enum NftEscrow.ProjectState"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3978:21:17"
            },
            "src": "3955:92:17",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3278,
              "nodeType": "Block",
              "src": "4147:47:17",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 3274,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "4173:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_NftEscrow_$3280",
                            "typeString": "contract NftEscrow"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_NftEscrow_$3280",
                            "typeString": "contract NftEscrow"
                          }
                        ],
                        "id": 3273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4165:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 3272,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4165:7:17",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4165:13:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "4165:21:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3271,
                  "id": 3277,
                  "nodeType": "Return",
                  "src": "4158:28:17"
                }
              ]
            },
            "functionSelector": "12065fe0",
            "id": 3279,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nameLocation": "4064:10:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3268,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4074:2:17"
            },
            "returnParameters": {
              "id": 3271,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3270,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "4133:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3279,
                  "src": "4125:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3269,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4125:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4124:17:17"
            },
            "scope": 3280,
            "src": "4055:139:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3281,
        "src": "194:4003:17",
        "usedErrors": []
      }
    ],
    "src": "37:4161:17"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-01-08T02:41:16.055Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "onERC721Received(address,address,uint256,bytes)": {
        "details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}