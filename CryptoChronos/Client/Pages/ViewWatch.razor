@page "/watch/{TokenId}"

@inject NavigationManager _navManager 
@inject NftClientService _clientService
@inject IContractInteractionService _contractService
@inject IConfiguration _config

@if (_watch != null)
{
	<div class="row">
		<div class="col-md-12">
			<img class="img-fluid mx-auto d-block" src="@_url">
			
			<h2 class="text-primary text-center">@(_watch.Manufacturer + " " + _watch.Model)</h2>

			<table class="table">
				<tbody>
					<tr class="table-primary">
						<td>NFT ID</td>
						<td>@TokenId</td>
					</tr>
					<tr class="table-primary">
						<td>Serial</td>
						<td>@_watch.Serial</td>
					</tr>
					<tr class="table-primary">
						<td>Manufacturer</td>
						<td>@_watch.Manufacturer</td>
					</tr>
					<tr class="table-primary">
						<td>Model</td>
						<td>@_watch.Model</td>
					</tr>
				</tbody>
			</table>

			@if (_watch.Metadata.Count() > 0)
			{
				<table class="table">
					<tbody>
						@foreach (var metadata in _watch.Metadata)
						{
							<tr class="table-primary">
								<td>@metadata.Key</td>
								<td>@metadata.Value</td>
							</tr>
						}
					</tbody>
				</table>
			}
			<div class="text-center">
				<p class="text-primary">Options</p>
					<button class="btn btn-primary" type="button" @onclick="ViewOnEtherscan">View On Etherscan</button>
					@if(_isOwner)
					{
						<button class="btn btn-primary" type="button" @onclick="TransferButtonClicked">Transfer</button>
						<button class="btn btn-primary" type="button" @onclick="@(() => _navManager.NavigateTo("CreateEscrow"))">Sell With Escrow Smart Contract</button>
					}
			</div>

		</div>
	</div>
}
else
{
	<LoadingPage/>

}
@code {

	[Parameter]
	public string TokenId { get; set; }

	private string _url;
	private Watch? _watch;

	private bool _isOwner = false;

	protected override async Task OnInitializedAsync()
	{
		var tokenUri = await _contractService.GetTokenUri(TokenId);
		var watchJson = await _contractService.GetNftMetadata(tokenUri);
		if(watchJson == null)
			return;
		_watch = JsonConvert.DeserializeObject<Watch>(watchJson);
		if (_watch == null)
			return;
		_url = "https://ipfs.io/ipfs/" + _watch.ImageCID;
		if(await _clientService.TransactionHandler.IsSiteConnected())
		{
			var userAddress = await _clientService.TransactionHandler.GetSelectedAddress();
			_isOwner = (await _contractService.GetNftOwner(TokenId)).ToLower() == userAddress.ToLower();
		}
		StateHasChanged();
	}

	private void TransferButtonClicked()
		=> _navManager.NavigateTo("/transfer/" + TokenId);

	private void ViewOnEtherscan()
	{
		string nftAddress = _config["NFTAddress"];
		string url = @"https://polygonscan.com/token/" + nftAddress + "?a=" + TokenId;
		_navManager.NavigateTo(url);
	}

	private void Return()
		=> _navManager.NavigateTo("/MyWatches"); 
}